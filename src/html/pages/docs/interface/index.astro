---
import AdminLayout from '../../../layouts/admin/admin-layout.astro'
import PageHeader from '../../../components/common/page-header.astro'
import { getPathPrefix } from '../../../../utils/path.js'

// Configuration for the page header with breadcrumb navigation
const interfacePageHeader = {
  title: 'UI Components Library',
  breadcrumbs: [
    { label: 'Docs', href: getPathPrefix('/docs') },
    { label: 'UI Components', class: 'active' }
  ]
}

// Define available UI components with their descriptions and navigation links
const uiComponentsList = [
  {
    title: 'Accordion',
    description: 'Create collapsible content panels for organizing information.',
    link: getPathPrefix('/interface/accordion'),
    icon: 'ri-layout-row-line'
  },
  {
    title: 'Alerts',
    description: 'Display important messages and notifications to users.',
    link: getPathPrefix('/interface/alerts'),
    icon: 'ri-alert-line'
  },
  {
    title: 'Badges',
    description: 'Highlight counts, labels, and status indicators.',
    link: getPathPrefix('/interface/badges'),
    icon: 'ri-price-tag-3-line'
  },
  {
    title: 'Breadcrumb',
    description: 'Show hierarchical navigation path for better user orientation.',
    link: getPathPrefix('/interface/breadcrumb'),
    icon: 'ri-navigation-line'
  },
  {
    title: 'Buttons',
    description: 'Interactive elements for triggering actions and events.',
    link: getPathPrefix('/interface/buttons'),
    icon: 'ri-cursor-line'
  },
  {
    title: 'Button Group',
    description: 'Combine related buttons into organized button sets.',
    link: getPathPrefix('/interface/button-group'),
    icon: 'ri-group-line'
  },
  {
    title: 'Cards',
    description: 'Versatile containers for displaying structured content.',
    link: getPathPrefix('/interface/cards'),
    icon: 'ri-layout-cards-line'
  },
  {
    title: 'Carousel',
    description: 'Create interactive slideshows for images and content.',
    link: getPathPrefix('/interface/carousel'),
    icon: 'ri-slideshow-line'
  },
  {
    title: 'Dropdowns',
    description: 'Display contextual menus and advanced selection options.',
    link: getPathPrefix('/interface/dropdowns'),
    icon: 'ri-arrow-drop-down-line'
  },
  {
    title: 'List Group',
    description: 'Create organized lists with various styles and interactions.',
    link: getPathPrefix('/interface/list-group'),
    icon: 'ri-list-check-2'
  },
  {
    title: 'Modal',
    description: 'Create popup dialogs and overlays for focused interactions.',
    link: getPathPrefix('/interface/modal'),
    icon: 'ri-window-2-line'
  },
  {
    title: 'Navs & Tabs',
    description: 'Build navigation interfaces with tabs and content switching.',
    link: getPathPrefix('/interface/navs-and-tabs'),
    icon: 'ri-folder-shield-2-line'
  },
  {
    title: 'Navbar',
    description: 'Create responsive navigation headers with flexible layouts.',
    link: getPathPrefix('/interface/navbar'),
    icon: 'ri-menu-line'
  },
  {
    title: 'Pagination',
    description: 'Implement navigation for segmented content and data sets.',
    link: getPathPrefix('/interface/pagination'),
    icon: 'ri-pages-line'
  },
  {
    title: 'Progress',
    description: 'Show progress indicators and status bars with various styles.',
    link: getPathPrefix('/interface/progress'),
    icon: 'ri-bar-chart-line'
  },
  {
    title: 'Spinners',
    description: 'Display loading states with animated indicators.',
    link: getPathPrefix('/interface/spinners'),
    icon: 'ri-loader-4-line'
  },
  {
    title: 'Toasts',
    description: 'Show temporary notifications and feedback messages.',
    link: getPathPrefix('/interface/toasts'),
    icon: 'ri-notification-3-line'
  },
  {
    title: 'Info Box',
    description: 'Display important information in highlighted containers.',
    link: getPathPrefix('/interface/info-box'),
    icon: 'ri-information-line'
  },
  {
    title: 'Small Box',
    description: 'Create compact information displays with essential data.',
    link: getPathPrefix('/interface/small-box'),
    icon: 'ri-box-3-line'
  }
]
---

<AdminLayout
  title="UI Components"
  description="Comprehensive library of UI components and interactive elements"
  currentPath="docs/interface"
>
  <PageHeader {...interfacePageHeader} />

  <!-- Component Grid Layout -->
  <div class="row g-4">
    {
      uiComponentsList.map((component) => (
        <div class="col-12 col-sm-6 col-lg-4">
          <a
            href={component.link}
            class="card h-100 text-decoration-none hover-shadow transition-all"
          >
            <div class="card-body">
              <div class="d-flex align-items-center mb-3">
                <i class={`${component.icon} fs-4 text-primary me-2`} />
                <h3 class="h5 mb-0">{component.title}</h3>
              </div>
              <p class="text-muted mb-0 small">{component.description}</p>
            </div>
          </a>
        </div>
      ))
    }
  </div>
</AdminLayout>

<style>
  /* Card hover effects */
  .hover-shadow {
    transition: all 0.2s ease-in-out;
  }

  .hover-shadow:hover {
    transform: translateY(-2px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  }
</style>
