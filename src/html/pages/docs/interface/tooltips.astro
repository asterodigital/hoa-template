---
import AdminLayout from '../../../layouts/admin/admin-layout.astro'
import ComponentPreview from '../../../components/component-preview/component-preview.astro'
import Toc from '../../../components/toc/toc.astro'
import PageHeader from '../../../components/common/page-header.astro'
import { getPathPrefix } from '../../../../utils/path.js'

const pageHeaderProps = {
  title: 'Tooltips',
  breadcrumbs: [
    { label: 'Docs', href: getPathPrefix('/docs') },
    { label: 'Interface', href: getPathPrefix('/interface') },
    { label: 'Tooltips', class: 'active' }
  ]
}

// Basic tooltip example
const basicTooltipExample = `<button type="button" class="btn btn-primary" data-bs-toggle="tooltip" data-bs-placement="top" title="Click to save your changes">
  <i class="ri-save-line me-2"></i>Save Changes
</button>
`

// Directional tooltips example
const directionalTooltipsExample = `<button type="button" class="btn btn-secondary mb-1" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Add new user to your team">
  <i class="ri-user-add-line me-2"></i>Add User
</button>
<button type="button" class="btn btn-secondary mb-1" data-bs-toggle="tooltip" data-bs-placement="right" data-bs-title="Export data to Excel">
  <i class="ri-file-excel-line me-2"></i>Export
</button>
<button type="button" class="btn btn-secondary mb-1" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Delete selected items">
  <i class="ri-delete-bin-line me-2"></i>Delete
</button>
<button type="button" class="btn btn-secondary mb-1" data-bs-toggle="tooltip" data-bs-placement="left" data-bs-title="View detailed settings">
  <i class="ri-settings-line me-2"></i>Settings
</button>
`

// HTML content tooltip example
const htmlTooltipExample = `<button type="button" class="btn btn-info" data-bs-toggle="tooltip" data-bs-html="true"
  data-bs-title="<i class='ri-information-line me-2'></i><strong>Important:</strong> <br>This action cannot be undone">
  <i class="ri-error-warning-line me-2"></i>Show Info
</button>
`

// Interactive links with tooltips example
const linkTooltipsExample = `<div class="p-3 bg-light rounded">
  <h5 class="mb-3">Project Overview</h5>
  <p class="text-muted">
    Welcome to our <a href="#" data-bs-toggle="tooltip" data-bs-title="Manage your project settings">project dashboard</a>.
    You can track your <a href="#" data-bs-toggle="tooltip" data-bs-title="View detailed analytics">project metrics</a>
    and manage your <a href="#" data-bs-toggle="tooltip" data-bs-title="Configure team permissions">team settings</a>.
    Need help? Check our <a href="#" data-bs-toggle="tooltip" data-bs-title="Access documentation and guides">documentation</a>.
  </p>
</div>
`

// Custom styled tooltip example
const customStyledTooltipExample = `<div class="d-flex gap-2">
  <button type="button" class="btn btn-success" data-bs-toggle="tooltip" data-bs-placement="top"
    data-bs-custom-class="custom-tooltip" data-bs-title="99.9% Uptime">
    <i class="ri-shield-check-line me-2"></i>System Status
  </button>

  <button type="button" class="btn btn-danger" data-bs-toggle="tooltip" data-bs-placement="top"
    data-bs-custom-class="custom-tooltip" data-bs-title="5 Critical Updates">
    <i class="ri-alert-line me-2"></i>Updates
  </button>
</div>

<style>
.custom-tooltip {
  --bs-tooltip-bg: var(--bs-dark);
  --bs-tooltip-color: var(--bs-white);
}
</style>
`
---

<AdminLayout
  title="Tooltips"
  description="Enhanced tooltips for better user guidance"
  currentPath="docs/interface/tooltips"
  enableComponentPreview={true}
>
  <PageHeader {...pageHeaderProps} />
  <div class="row">
    <div class="col-lg-9 col-xl-9 order-1 order-lg-0">
      <div class="row">
        <div class="col-12">
          <p class="my-0">
            Tooltips are powerful UI elements that provide contextual information and helpful hints
            when users hover over or focus on interface elements. They enhance user experience by
            offering instant guidance and additional details without cluttering the interface.
          </p>
        </div>
      </div>
      <div class="row js-toc-content">
        <div class="col-12">
          <div class="my-3">
            <h3 class="mb-0" id="example">Basic Example</h3>
            <p class="py-2">
              Enable tooltips using the <code>data-bs-toggle="tooltip"</code> attribute. Tooltips can
              be enhanced with icons and styled to match your application's design.
            </p>

            <ComponentPreview
              title="Basic Tooltip"
              height="250px"
              component={basicTooltipExample}
              htmlCode={basicTooltipExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="directions">Tooltip Directions</h3>
            <p class="py-2">
              Position tooltips in four directions using <code>data-bs-placement</code>:
              <code>top</code>, <code>right</code>, <code>bottom</code>, or <code>left</code>. Each
              direction is useful for different UI layouts and space constraints.
            </p>

            <ComponentPreview
              title="Directional Tooltips"
              height="250px"
              component={directionalTooltipsExample}
              htmlCode={directionalTooltipsExample}
              cssCode={``}
              jsCode={``}
            />

            <p class="py-2">
              Tooltips can include HTML content for rich formatting, icons, and multiple lines of
              text. Enable HTML content using the <code>data-bs-html="true"</code> attribute.
            </p>

            <ComponentPreview
              title="HTML Content Tooltip"
              height="250px"
              component={htmlTooltipExample}
              htmlCode={htmlTooltipExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="tooltips-on-links">Interactive Elements</h3>
            <p class="py-2">
              Add tooltips to any interactive element to provide additional context. This is
              particularly useful for links, buttons, and form elements where extra guidance might
              be needed.
            </p>

            <ComponentPreview
              title="Interactive Elements with Tooltips"
              height="250px"
              component={linkTooltipsExample}
              htmlCode={linkTooltipsExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="custom-tooltips">Custom Styled Tooltips</h3>
            <p class="py-2">
              Customize tooltip appearance using CSS variables and custom classes. Create branded
              tooltips that match your application's design system.
            </p>

            <ComponentPreview
              title="Custom Styled Tooltips"
              height="250px"
              component={customStyledTooltipExample}
              htmlCode={customStyledTooltipExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
        </div>
      </div>
    </div>
    <Toc />
  </div>
</AdminLayout>
