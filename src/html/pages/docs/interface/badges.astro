---
import AdminLayout from '../../../layouts/admin/admin-layout.astro'
import ComponentPreview from '../../../components/component-preview/component-preview.astro'
import Toc from '../../../components/toc/toc.astro'
import PageHeader from '../../../components/common/page-header.astro'
import { getPathPrefix } from '../../../../utils/path.js'

// Page header configuration with navigation breadcrumbs
const pageHeaderConfig = {
  title: 'Badges',
  breadcrumbs: [
    { label: 'Docs', href: getPathPrefix('/docs') },
    { label: 'Interface', href: getPathPrefix('/interface') },
    { label: 'Badges', class: 'active' }
  ]
}

// Heading badges with contextual examples for document sections
const headingBadgeExamples = `<h1>Product Documentation <span class="badge text-bg-primary">Beta Release</span></h1>
<h2>User Dashboard <span class="badge text-bg-success">Recently Updated</span></h2>
<h3>Security Settings <span class="badge text-bg-warning">Action Required</span></h3>
<h4>API Documentation <span class="badge text-bg-info">v2.0.0</span></h4>
<h5>Premium Features <span class="badge text-bg-secondary">Pro Users</span></h5>
<h6>Developer Tools <span class="badge text-bg-danger">Experimental</span></h6>
`

// Button badges with notification counters
const buttonBadgeExamples = `<div class="d-flex flex-wrap gap-4">
  <button type="button" class="btn btn-primary">
    <i class="ri-mail-line me-1"></i>Inbox <span class="badge text-bg-light ms-2">14</span>
  </button>

  <button type="button" class="btn btn-success">
    <i class="ri-refresh-line me-1"></i>Updates <span class="badge text-bg-light ms-2">3</span>
  </button>

  <button type="button" class="btn btn-danger">
    <i class="ri-alarm-warning-line me-1"></i>Alerts <span class="badge text-bg-light ms-2">7</span>
  </button>

  <button type="button" class="btn btn-info">
    <i class="ri-notification-3-line me-1"></i>Notifications <span class="badge text-bg-light ms-2">5</span>
  </button>
</div>`

// Positioned badges for notification indicators
const positionedBadgeExamples = `<div class="d-flex flex-wrap gap-4">
  <button type="button" class="btn btn-primary position-relative">
    <i class="ri-notification-3-line me-1"></i>Notifications
    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
      99+
      <span class="visually-hidden">unread notifications</span>
    </span>
  </button>

  <button type="button" class="btn btn-success position-relative">
    <i class="ri-chat-3-line me-1"></i>Messages
    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning">
      5
      <span class="visually-hidden">unread messages</span>
    </span>
  </button>

  <button type="button" class="btn btn-info position-relative">
    <i class="ri-shopping-cart-line me-1"></i>Cart
    <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-dark">
      3
      <span class="visually-hidden">items in cart</span>
    </span>
  </button>

  <button type="button" class="btn btn-secondary position-relative">
    <i class="ri-user-line me-1"></i>Profile
    <span class="position-absolute top-0 start-100 translate-middle p-2 bg-success border border-light rounded-circle">
      <span class="visually-hidden">online status</span>
    </span>
  </button>
</div>`

// Contextual background variations with icons
const contextualBadgeExamples = `<div class="d-flex gap-2 flex-wrap">
  <span class="badge text-bg-primary">New Feature</span>
  <span class="badge text-bg-secondary">Coming Soon</span>
  <span class="badge text-bg-success">Completed</span>
  <span class="badge text-bg-danger">Critical</span>
  <span class="badge text-bg-warning">In Progress</span>
  <span class="badge text-bg-info">Information</span>
  <span class="badge text-bg-light">Default</span>
  <span class="badge text-bg-dark">System</span>
</div>

<div class="mt-3">
  <span class="badge text-bg-primary"><i class="ri-star-line me-1"></i>Featured</span>
  <span class="badge text-bg-success"><i class="ri-check-line me-1"></i>Verified</span>
  <span class="badge text-bg-danger"><i class="ri-error-warning-line me-1"></i>Important</span>
  <span class="badge text-bg-info"><i class="ri-information-line me-1"></i>Note</span>
  <span class="badge text-bg-warning"><i class="ri-time-line me-1"></i>Pending</span>
  <span class="badge text-bg-secondary"><i class="ri-lock-line me-1"></i>Restricted</span>
</div>`

// Pill-shaped badges with various states and icons
const pillBadgeExamples = `<div class="d-flex gap-2 flex-wrap">
  <span class="badge rounded-pill text-bg-primary">Active Users <span class="ms-1">150+</span></span>
  <span class="badge rounded-pill text-bg-secondary">Draft</span>
  <span class="badge rounded-pill text-bg-success">Task Complete</span>
  <span class="badge rounded-pill text-bg-danger">High Priority</span>
  <span class="badge rounded-pill text-bg-warning">In Review</span>
  <span class="badge rounded-pill text-bg-info">Beta Testing</span>
  <span class="badge rounded-pill text-bg-light">Optional</span>
  <span class="badge rounded-pill text-bg-dark">Restricted</span>
</div>

<div class="mt-3">
  <span class="badge rounded-pill text-bg-primary"><i class="ri-user-line me-1"></i>Admin</span>
  <span class="badge rounded-pill text-bg-success"><i class="ri-shield-check-line me-1"></i>Secure</span>
  <span class="badge rounded-pill text-bg-warning"><i class="ri-time-line me-1"></i>Pending</span>
  <span class="badge rounded-pill text-bg-info"><i class="ri-refresh-line me-1"></i>Syncing</span>
  <span class="badge rounded-pill text-bg-danger"><i class="ri-close-circle-line me-1"></i>Rejected</span>
  <span class="badge rounded-pill text-bg-dark"><i class="ri-lock-line me-1"></i>Private</span>
</div>`

// Custom styled badges with different sizes and appearances
const customStyledBadgeExamples = `<div class="mb-3">
  <h6 class="mb-2">Size Variations</h6>
  <span class="badge text-bg-primary fs-6">Large Badge</span>
  <span class="badge text-bg-success">Default Size</span>
  <span class="badge text-bg-info fs-7">Small Badge</span>
  <span class="badge text-bg-warning fs-8">Extra Small</span>
</div>

<div class="mb-3">
  <h6 class="mb-2">Border Styles</h6>
  <span class="badge text-bg-primary border border-light">Primary</span>
  <span class="badge text-bg-success border border-light">Success</span>
  <span class="badge text-bg-danger border border-light">Danger</span>
  <span class="badge text-bg-dark border border-light">Dark</span>
</div>

<div class="mb-3">
  <h6 class="mb-2">Custom Appearance</h6>
  <span class="badge bg-primary bg-opacity-25 text-primary">Subtle Primary</span>
  <span class="badge bg-success bg-opacity-25 text-success">Subtle Success</span>
  <span class="badge bg-danger bg-opacity-25 text-danger">Subtle Danger</span>
  <span class="badge bg-warning bg-opacity-25 text-warning">Subtle Warning</span>
  <span class="badge bg-info bg-opacity-25 text-info">Subtle Info</span>
</div>

<div>
  <h6 class="mb-2">With Dot Indicators</h6>
  <span class="badge text-bg-light text-dark">
    <i class="ri-checkbox-blank-circle-fill text-success me-1" style="font-size: 0.5rem; vertical-align: middle;"></i>
    Online
  </span>
  <span class="badge text-bg-light text-dark">
    <i class="ri-checkbox-blank-circle-fill text-warning me-1" style="font-size: 0.5rem; vertical-align: middle;"></i>
    Away
  </span>
  <span class="badge text-bg-light text-dark">
    <i class="ri-checkbox-blank-circle-fill text-danger me-1" style="font-size: 0.5rem; vertical-align: middle;"></i>
    Offline
  </span>
  <span class="badge text-bg-light text-dark">
    <i class="ri-checkbox-blank-circle-fill text-secondary me-1" style="font-size: 0.5rem; vertical-align: middle;"></i>
    Inactive
  </span>
</div>`

// Interactive badge examples with JavaScript functionality
const interactiveBadgeExamples = `<div class="mb-4">
  <h6 class="mb-3">Dynamic Counter Badges</h6>
  <div class="d-flex gap-3 flex-wrap">
    <button type="button" class="btn btn-primary position-relative" onclick="updateBadgeCount('inbox-count', 1)">
      <i class="ri-mail-line me-1"></i>Inbox
      <span id="inbox-count" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
        0
        <span class="visually-hidden">unread emails</span>
      </span>
    </button>

    <button type="button" class="btn btn-success position-relative" onclick="updateBadgeCount('task-count', 1)">
      <i class="ri-task-line me-1"></i>Tasks
      <span id="task-count" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning">
        0
        <span class="visually-hidden">pending tasks</span>
      </span>
    </button>

    <button type="button" class="btn btn-info position-relative" onclick="updateBadgeCount('notification-count', 1)">
      <i class="ri-notification-3-line me-1"></i>Alerts
      <span id="notification-count" class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-dark">
        0
        <span class="visually-hidden">notifications</span>
      </span>
    </button>

    <button type="button" class="btn btn-secondary" onclick="resetAllCounts()">
      <i class="ri-refresh-line me-1"></i>Reset All
    </button>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">Toggle Status Badges</h6>
  <div class="d-flex gap-3 flex-wrap align-items-center">
    <div class="d-flex align-items-center">
      <span class="me-2">Server Status:</span>
      <span id="server-status" class="badge text-bg-success" onclick="toggleServerStatus()">
        <i class="ri-checkbox-blank-circle-fill me-1"></i>Online
      </span>
    </div>

    <div class="d-flex align-items-center">
      <span class="me-2">Sync Status:</span>
      <span id="sync-status" class="badge text-bg-info" onclick="toggleSyncStatus()">
        <i class="ri-refresh-line me-1"></i>Idle
      </span>
    </div>

    <div class="d-flex align-items-center">
      <span class="me-2">User Role:</span>
      <span id="user-role" class="badge text-bg-primary" onclick="toggleUserRole()">
        <i class="ri-user-line me-1"></i>Guest
      </span>
    </div>
  </div>
</div>

<div>
  <h6 class="mb-3">Dismissible Feature Badges</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge text-bg-primary position-relative" id="feature-badge-1">
      <i class="ri-star-line me-1"></i>New Feature
      <button type="button" class="btn-close btn-close-white position-absolute top-0 start-100 translate-middle"
              style="font-size: 0.5rem; padding: 0.1rem;" onclick="dismissBadge('feature-badge-1')" aria-label="Dismiss"></button>
    </span>

    <span class="badge text-bg-success position-relative" id="feature-badge-2">
      <i class="ri-gift-line me-1"></i>Special Offer
      <button type="button" class="btn-close btn-close-white position-absolute top-0 start-100 translate-middle"
              style="font-size: 0.5rem; padding: 0.1rem;" onclick="dismissBadge('feature-badge-2')" aria-label="Dismiss"></button>
    </span>

    <span class="badge text-bg-warning position-relative" id="feature-badge-3">
      <i class="ri-time-line me-1"></i>Limited Time
      <button type="button" class="btn-close position-absolute top-0 start-100 translate-middle"
              style="font-size: 0.5rem; padding: 0.1rem; color: #000;" onclick="dismissBadge('feature-badge-3')" aria-label="Dismiss"></button>
    </span>
  </div>
</div>`

// JavaScript for interactive badge functionality
const interactiveBadgeJS = `<script>
let counters = { 'inbox-count': 0, 'task-count': 0, 'notification-count': 0 };
let serverOnline = true;
let syncActive = false;
let userRoles = ['Guest', 'User', 'Admin'];
let currentRoleIndex = 0;

function updateBadgeCount(badgeId, increment) {
  counters[badgeId] += increment;
  const badge = document.getElementById(badgeId);
  if (badge) {
    badge.textContent = formatCount(counters[badgeId]);

    // Add animation
    badge.classList.add('animate-pulse');
    setTimeout(() => badge.classList.remove('animate-pulse'), 300);

    // Update visibility
    if (counters[badgeId] > 0) {
      badge.classList.remove('d-none');
    } else {
      badge.classList.add('d-none');
    }
  }
}

function formatCount(count) {
  if (count === 0) return '0';
  if (count <= 99) return count.toString();
  if (count <= 999) return '99+';
  if (count <= 999999) return Math.floor(count / 1000) + 'K+';
  return Math.floor(count / 1000000) + 'M+';
}

function resetAllCounts() {
  Object.keys(counters).forEach(badgeId => {
    counters[badgeId] = 0;
    const badge = document.getElementById(badgeId);
    if (badge) {
      badge.textContent = '0';
      badge.classList.add('d-none');
    }
  });
}

function toggleServerStatus() {
  serverOnline = !serverOnline;
  const badge = document.getElementById('server-status');
  if (serverOnline) {
    badge.className = 'badge text-bg-success';
    badge.innerHTML = '<i class="ri-checkbox-blank-circle-fill me-1"></i>Online';
  } else {
    badge.className = 'badge text-bg-danger';
    badge.innerHTML = '<i class="ri-checkbox-blank-circle-fill me-1"></i>Offline';
  }
}

function toggleSyncStatus() {
  syncActive = !syncActive;
  const badge = document.getElementById('sync-status');
  if (syncActive) {
    badge.className = 'badge text-bg-warning';
    badge.innerHTML = '<i class="ri-refresh-line me-1"></i>Syncing...';
  } else {
    badge.className = 'badge text-bg-info';
    badge.innerHTML = '<i class="ri-refresh-line me-1"></i>Idle';
  }
}

function toggleUserRole() {
  currentRoleIndex = (currentRoleIndex + 1) % userRoles.length;
  const role = userRoles[currentRoleIndex];
  const badge = document.getElementById('user-role');

  const roleConfig = {
    'Guest': { class: 'text-bg-secondary', icon: 'ri-user-line' },
    'User': { class: 'text-bg-primary', icon: 'ri-user-check-line' },
    'Admin': { class: 'text-bg-danger', icon: 'ri-admin-line' }
  };

  const config = roleConfig[role];
  badge.className = 'badge ' + config.class;
  badge.innerHTML = '<i class="' + config.icon + ' me-1"></i>' + role;
}

function dismissBadge(badgeId) {
  const badge = document.getElementById(badgeId);
  if (badge) {
    badge.style.transition = 'opacity 0.3s ease';
    badge.style.opacity = '0';
    setTimeout(() => {
      badge.style.display = 'none';
    }, 300);
  }
}
</script>`

// Status and workflow badge examples for business applications
const statusBadgeExamples = `<div class="mb-4">
  <h6 class="mb-3">Project Status Indicators</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge text-bg-secondary"><i class="ri-hourglass-line me-1"></i>Planning</span>
    <span class="badge text-bg-primary"><i class="ri-play-line me-1"></i>In Progress</span>
    <span class="badge text-bg-warning"><i class="ri-pause-line me-1"></i>On Hold</span>
    <span class="badge text-bg-info"><i class="ri-eye-line me-1"></i>In Review</span>
    <span class="badge text-bg-success"><i class="ri-check-line me-1"></i>Completed</span>
    <span class="badge text-bg-danger"><i class="ri-close-line me-1"></i>Cancelled</span>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">Task Priority Levels</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge text-bg-light text-dark border"><i class="ri-arrow-down-line me-1"></i>Low Priority</span>
    <span class="badge text-bg-info"><i class="ri-arrow-right-line me-1"></i>Normal</span>
    <span class="badge text-bg-warning"><i class="ri-arrow-up-line me-1"></i>High Priority</span>
    <span class="badge text-bg-danger"><i class="ri-arrow-up-double-line me-1"></i>Critical</span>
    <span class="badge text-bg-dark"><i class="ri-fire-line me-1"></i>Emergency</span>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">Document Status</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge text-bg-secondary"><i class="ri-file-text-line me-1"></i>Draft</span>
    <span class="badge text-bg-primary"><i class="ri-file-edit-line me-1"></i>Under Review</span>
    <span class="badge text-bg-warning"><i class="ri-file-warning-line me-1"></i>Needs Changes</span>
    <span class="badge text-bg-success"><i class="ri-file-check-line me-1"></i>Approved</span>
    <span class="badge text-bg-info"><i class="ri-share-line me-1"></i>Published</span>
    <span class="badge text-bg-danger"><i class="ri-file-forbid-line me-1"></i>Rejected</span>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">User Account Status</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge text-bg-success"><i class="ri-user-check-line me-1"></i>Active</span>
    <span class="badge text-bg-warning"><i class="ri-user-unfollow-line me-1"></i>Inactive</span>
    <span class="badge text-bg-info"><i class="ri-user-received-line me-1"></i>Pending</span>
    <span class="badge text-bg-secondary"><i class="ri-user-forbid-line me-1"></i>Suspended</span>
    <span class="badge text-bg-danger"><i class="ri-user-x-line me-1"></i>Banned</span>
    <span class="badge text-bg-primary"><i class="ri-vip-crown-line me-1"></i>VIP</span>
  </div>
</div>

<div>
  <h6 class="mb-3">Order & Payment Status</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge text-bg-info"><i class="ri-shopping-cart-line me-1"></i>Cart</span>
    <span class="badge text-bg-warning"><i class="ri-time-line me-1"></i>Pending Payment</span>
    <span class="badge text-bg-primary"><i class="ri-truck-line me-1"></i>Processing</span>
    <span class="badge text-bg-secondary"><i class="ri-ship-line me-1"></i>Shipped</span>
    <span class="badge text-bg-success"><i class="ri-check-double-line me-1"></i>Delivered</span>
    <span class="badge text-bg-danger"><i class="ri-refund-line me-1"></i>Refunded</span>
  </div>
</div>`

// Notification and counter badge examples
const notificationBadgeExamples = `<div class="mb-4">
  <h6 class="mb-3">Social Media Style Counters</h6>
  <div class="d-flex gap-3 flex-wrap">
    <div class="d-flex align-items-center">
      <i class="ri-heart-3-line text-danger fs-5 me-2"></i>
      <span class="badge rounded-pill text-bg-danger">1.2K</span>
      <span class="ms-2 text-muted">Likes</span>
    </div>

    <div class="d-flex align-items-center">
      <i class="ri-chat-3-line text-primary fs-5 me-2"></i>
      <span class="badge rounded-pill text-bg-primary">248</span>
      <span class="ms-2 text-muted">Comments</span>
    </div>

    <div class="d-flex align-items-center">
      <i class="ri-share-line text-success fs-5 me-2"></i>
      <span class="badge rounded-pill text-bg-success">89</span>
      <span class="ms-2 text-muted">Shares</span>
    </div>

    <div class="d-flex align-items-center">
      <i class="ri-eye-line text-info fs-5 me-2"></i>
      <span class="badge rounded-pill text-bg-info">5.7K</span>
      <span class="ms-2 text-muted">Views</span>
    </div>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">App Notification Badges</h6>
  <div class="d-flex gap-4 flex-wrap">
    <div class="position-relative">
      <button class="btn btn-outline-primary btn-lg">
        <i class="ri-message-3-line"></i>
      </button>
      <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
        3
        <span class="visually-hidden">unread messages</span>
      </span>
    </div>

    <div class="position-relative">
      <button class="btn btn-outline-success btn-lg">
        <i class="ri-notification-3-line"></i>
      </button>
      <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-warning">
        12
        <span class="visually-hidden">notifications</span>
      </span>
    </div>

    <div class="position-relative">
      <button class="btn btn-outline-info btn-lg">
        <i class="ri-shopping-bag-line"></i>
      </button>
      <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-dark">
        1
        <span class="visually-hidden">items in cart</span>
      </span>
    </div>

    <div class="position-relative">
      <button class="btn btn-outline-danger btn-lg">
        <i class="ri-alarm-warning-line"></i>
      </button>
      <span class="position-absolute top-0 start-100 translate-middle p-2 bg-danger border border-light rounded-circle">
        <span class="visually-hidden">alert indicator</span>
      </span>
    </div>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">Real-time Activity Counters</h6>
  <div class="row g-3">
    <div class="col-md-6">
      <div class="card">
        <div class="card-body d-flex justify-content-between align-items-center">
          <div>
            <h6 class="card-title mb-1">Active Users</h6>
            <small class="text-muted">Currently online</small>
          </div>
          <span class="badge text-bg-success fs-6">
            <i class="ri-user-line me-1"></i>1,247
          </span>
        </div>
      </div>
    </div>

    <div class="col-md-6">
      <div class="card">
        <div class="card-body d-flex justify-content-between align-items-center">
          <div>
            <h6 class="card-title mb-1">Pending Reviews</h6>
            <small class="text-muted">Awaiting approval</small>
          </div>
          <span class="badge text-bg-warning fs-6">
            <i class="ri-time-line me-1"></i>23
          </span>
        </div>
      </div>
    </div>

    <div class="col-md-6">
      <div class="card">
        <div class="card-body d-flex justify-content-between align-items-center">
          <div>
            <h6 class="card-title mb-1">System Alerts</h6>
            <small class="text-muted">Requires attention</small>
          </div>
          <span class="badge text-bg-danger fs-6">
            <i class="ri-error-warning-line me-1"></i>7
          </span>
        </div>
      </div>
    </div>

    <div class="col-md-6">
      <div class="card">
        <div class="card-body d-flex justify-content-between align-items-center">
          <div>
            <h6 class="card-title mb-1">Completed Tasks</h6>
            <small class="text-muted">This week</small>
          </div>
          <span class="badge text-bg-primary fs-6">
            <i class="ri-check-line me-1"></i>156
          </span>
        </div>
      </div>
    </div>
  </div>
</div>

<div>
  <h6 class="mb-3">Live Status Indicators</h6>
  <div class="d-flex gap-3 flex-wrap">
    <span class="badge text-bg-light text-dark">
      <i class="ri-checkbox-blank-circle-fill text-success me-1" style="font-size: 0.5rem;"></i>
      Online (247)
    </span>
    <span class="badge text-bg-light text-dark">
      <i class="ri-checkbox-blank-circle-fill text-warning me-1" style="font-size: 0.5rem;"></i>
      Away (18)
    </span>
    <span class="badge text-bg-light text-dark">
      <i class="ri-checkbox-blank-circle-fill text-danger me-1" style="font-size: 0.5rem;"></i>
      Busy (5)
    </span>
    <span class="badge text-bg-light text-dark">
      <i class="ri-checkbox-blank-circle-fill text-secondary me-1" style="font-size: 0.5rem;"></i>
      Offline (1,023)
    </span>
  </div>
</div>`

// E-commerce and product badge examples
const ecommerceBadgeExamples = `<div class="mb-4">
  <h6 class="mb-3">Product Feature Badges</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge text-bg-danger"><i class="ri-fire-line me-1"></i>Hot Deal</span>
    <span class="badge text-bg-warning"><i class="ri-star-line me-1"></i>Best Seller</span>
    <span class="badge text-bg-success"><i class="ri-leaf-line me-1"></i>Eco Friendly</span>
    <span class="badge text-bg-info"><i class="ri-truck-line me-1"></i>Free Shipping</span>
    <span class="badge text-bg-primary"><i class="ri-award-line me-1"></i>Editor's Choice</span>
    <span class="badge text-bg-secondary"><i class="ri-time-line me-1"></i>Limited Edition</span>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">Discount & Pricing Badges</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge bg-danger bg-opacity-25 text-danger fs-6">-50% OFF</span>
    <span class="badge bg-success bg-opacity-25 text-success fs-6">Buy 2 Get 1 Free</span>
    <span class="badge bg-warning bg-opacity-25 text-warning fs-6">Flash Sale</span>
    <span class="badge bg-info bg-opacity-25 text-info fs-6">Member Price</span>
    <span class="badge bg-primary bg-opacity-25 text-primary fs-6">Early Bird</span>
    <span class="badge bg-dark bg-opacity-25 text-dark fs-6">Clearance</span>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">Stock Status Indicators</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge text-bg-success"><i class="ri-check-line me-1"></i>In Stock (25+)</span>
    <span class="badge text-bg-warning"><i class="ri-time-line me-1"></i>Low Stock (3 left)</span>
    <span class="badge text-bg-danger"><i class="ri-close-line me-1"></i>Out of Stock</span>
    <span class="badge text-bg-info"><i class="ri-calendar-line me-1"></i>Pre-order</span>
    <span class="badge text-bg-secondary"><i class="ri-pause-line me-1"></i>Discontinued</span>
    <span class="badge text-bg-primary"><i class="ri-refresh-line me-1"></i>Restocking Soon</span>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">Product Category Tags</h6>
  <div class="d-flex gap-2 flex-wrap">
    <span class="badge rounded-pill text-bg-primary">Electronics</span>
    <span class="badge rounded-pill text-bg-success">Fashion</span>
    <span class="badge rounded-pill text-bg-info">Books</span>
    <span class="badge rounded-pill text-bg-warning">Home & Garden</span>
    <span class="badge rounded-pill text-bg-danger">Sports</span>
    <span class="badge rounded-pill text-bg-secondary">Beauty</span>
    <span class="badge rounded-pill text-bg-dark">Automotive</span>
  </div>
</div>

<div class="mb-4">
  <h6 class="mb-3">Review & Rating Badges</h6>
  <div class="d-flex gap-3 flex-wrap align-items-center">
    <div class="d-flex align-items-center">
      <span class="badge text-bg-warning me-2">
        <i class="ri-star-fill me-1"></i>4.8
      </span>
      <small class="text-muted">(2,347 reviews)</small>
    </div>

    <div class="d-flex align-items-center">
      <span class="badge text-bg-success me-2">
        <i class="ri-thumb-up-line me-1"></i>98% Positive
      </span>
    </div>

    <div class="d-flex align-items-center">
      <span class="badge text-bg-info me-2">
        <i class="ri-medal-line me-1"></i>Top Rated
      </span>
    </div>

    <div class="d-flex align-items-center">
      <span class="badge text-bg-primary me-2">
        <i class="ri-customer-service-line me-1"></i>Verified Seller
      </span>
    </div>
  </div>
</div>

<div>
  <h6 class="mb-3">Shipping & Delivery Badges</h6>
  <div class="row g-3">
    <div class="col-md-6">
      <div class="border rounded p-3">
        <div class="d-flex justify-content-between align-items-center mb-2">
          <span class="fw-bold">Express Delivery</span>
          <span class="badge text-bg-success">Available</span>
        </div>
        <small class="text-muted">Get it by tomorrow</small>
      </div>
    </div>

    <div class="col-md-6">
      <div class="border rounded p-3">
        <div class="d-flex justify-content-between align-items-center mb-2">
          <span class="fw-bold">Same Day Delivery</span>
          <span class="badge text-bg-primary">Premium</span>
        </div>
        <small class="text-muted">Order within 2 hours</small>
      </div>
    </div>

    <div class="col-md-6">
      <div class="border rounded p-3">
        <div class="d-flex justify-content-between align-items-center mb-2">
          <span class="fw-bold">Free Returns</span>
          <span class="badge text-bg-info">30 Days</span>
        </div>
        <small class="text-muted">No questions asked</small>
      </div>
    </div>

    <div class="col-md-6">
      <div class="border rounded p-3">
        <div class="d-flex justify-content-between align-items-center mb-2">
          <span class="fw-bold">Warranty</span>
          <span class="badge text-bg-warning">2 Years</span>
        </div>
        <small class="text-muted">Manufacturer guarantee</small>
      </div>
    </div>
  </div>
</div>`

// Shared preview configuration for consistent component display
const previewConfig = {
  cssCode: '',
  jsCode: ''
}
---

<AdminLayout
  title="Badges"
  description="Versatile badge components for status indicators and notifications"
  currentPath="docs/interface/badges"
  enableComponentPreview={true}
>
  <PageHeader {...pageHeaderConfig} />
  <div class="row">
    <div class="col-lg-9 col-xl-9 order-1 order-lg-0">
      <div class="row">
        <div class="col-12">
          <p class="my-0">
            Badges are compact UI elements that highlight important information, status indicators,
            or counters. They enhance user interfaces by providing visual cues for notifications,
            labels, and important metadata. Badges help draw attention to specific elements,
            indicate status changes, and provide contextual information in a space-efficient manner
            across your application.
          </p>
        </div>
      </div>
      <div class="row js-toc-content">
        <div class="col-12">
          <div class="my-3">
            <h3 class="mb-0" id="headings">Heading Badges</h3>
            <p class="py-2">
              Enhance headings with contextual badges to highlight important metadata, version
              numbers, or status indicators. Use the <code>text-bg-*</code> classes to apply different
              background colors that match your content's context and importance. Heading badges are
              particularly useful for document sections, feature announcements, or status indicators
              in dashboards and documentation.
            </p>

            <ComponentPreview
              title="Heading Badge Examples"
              height="550px"
              component={headingBadgeExamples}
              htmlCode={headingBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="buttons">Button Badges</h3>
            <p class="py-2">
              Add badges to buttons to display counters, status indicators, or small notifications.
              Use the <code>ms-2</code> utility class to create proper spacing between the button text
              and badge. Combine with different button variants for various visual styles. Button badges
              are ideal for notification counters, inbox messages, or any numeric indicators that need
              to be associated with an action.
            </p>

            <ComponentPreview
              title="Button Badge Examples"
              height="550px"
              component={buttonBadgeExamples}
              htmlCode={buttonBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="positioned">Positioned Badges</h3>
            <p class="py-2">
              Create notification-style badges using positioning utilities. Combine
              <code>position-absolute</code>, <code>translate-middle</code>, and placement classes
              to precisely position badges relative to their container elements. These badges are
              perfect for notification indicators, status dots, or counters that need to appear as
              overlays on other elements without affecting the layout flow.
            </p>

            <ComponentPreview
              title="Positioned Badge Examples"
              height="550px"
              component={positionedBadgeExamples}
              htmlCode={positionedBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="background-colors">Contextual Badges</h3>
            <p class="py-2">
              Use contextual background colors to convey different states and meanings. Combine
              badges with icons for enhanced visual communication. The <code>text-bg-*</code>
              classes ensure proper contrast between text and background colors. Each color variant has
              a specific semantic meaning that helps users quickly understand the information being presented:
              <ul class="mt-2">
                <li>
                  <strong>Primary/Secondary:</strong> General information and system categories
                </li>
                <li>
                  <strong>Success:</strong> Completed actions, verified status, or positive outcomes
                </li>
                <li>
                  <strong>Danger:</strong> Critical issues, errors, or items requiring immediate attention
                </li>
                <li><strong>Warning:</strong> Caution, pending actions, or items needing review</li>
                <li>
                  <strong>Info:</strong> Helpful information, tips, or neutral status indicators
                </li>
              </ul>
            </p>

            <ComponentPreview
              title="Contextual Badge Examples"
              height="550px"
              component={contextualBadgeExamples}
              htmlCode={contextualBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="pill-badges">Pill Badges</h3>
            <p class="py-2">
              Create softer, pill-shaped badges using the <code>rounded-pill</code> class. These badges
              are perfect for tags, status indicators, or counters that need a more modern look. Combine
              with icons and counters for enhanced functionality. Pill badges work particularly well
              for tags, filters, or status indicators where a softer appearance is desired.
            </p>

            <ComponentPreview
              title="Pill Badge Examples"
              height="550px"
              component={pillBadgeExamples}
              htmlCode={pillBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="custom-styled">Custom Styled Badges</h3>
            <p class="py-2">
              Create custom badge styles by combining utility classes with the base badge component.
              Adjust size, opacity, borders, and other properties to create badges that perfectly
              match your design system. Custom badges can help establish visual hierarchy, indicate
              different levels of importance, or create specialized indicators for specific use
              cases.
            </p>

            <ComponentPreview
              title="Custom Styled Badge Examples"
              height="550px"
              component={customStyledBadgeExamples}
              htmlCode={customStyledBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="interactive-badges">Interactive Badge Components</h3>
            <p class="py-2">
              Create dynamic badges that respond to user interactions and state changes. These
              examples demonstrate badges with hover effects, clickable actions, and real-time
              updates. Interactive badges enhance user engagement and provide immediate feedback for
              various interface states and user actions.
            </p>

            <ComponentPreview
              title="Interactive Badge Examples"
              height="550px"
              component={interactiveBadgeExamples}
              htmlCode={interactiveBadgeExamples}
              jsCode={interactiveBadgeJS}
              cssCode=""
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="status-badges">Status & Workflow Badges</h3>
            <p class="py-2">
              Professional status indicators for project management, task tracking, and workflow
              systems. These badges communicate different states in business processes and help
              users quickly understand the current status of items, projects, or tasks within your
              application.
            </p>

            <ComponentPreview
              title="Status & Workflow Badges"
              height="550px"
              component={statusBadgeExamples}
              htmlCode={statusBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="notification-badges">Notification & Counter Badges</h3>
            <p class="py-2">
              Specialized badges for notifications, counters, and real-time updates. These examples
              show various approaches to displaying numeric data, social media style notifications,
              and real-time status indicators that keep users informed about important updates and
              activities.
            </p>

            <ComponentPreview
              title="Notification & Counter Badges"
              height="550px"
              component={notificationBadgeExamples}
              htmlCode={notificationBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 class="mb-0" id="e-commerce-badges">E-commerce & Product Badges</h3>
            <p class="py-2">
              Product-focused badges for e-commerce interfaces, pricing displays, and promotional
              content. These badges help highlight special offers, product features, pricing
              information, and promotional content that drives user engagement and conversion in
              commercial applications.
            </p>

            <ComponentPreview
              title="E-commerce & Product Badges"
              height="550px"
              component={ecommerceBadgeExamples}
              htmlCode={ecommerceBadgeExamples}
              {...previewConfig}
            />
          </div>

          <div class="my-3">
            <h3 id="developer-tips">Developer Tips & Best Practices</h3>
            <div class="alert alert-info">
              <h4 class="alert-heading">
                <i class="ri-lightbulb-line me-2"></i>
                Pro Tips for Badges
              </h4>
              <ul class="mb-0">
                <li>
                  <strong>Accessibility:</strong> Always include <code>aria-label</code> or <code
                    >visually-hidden</code
                  > text for screen readers
                </li>
                <li>
                  <strong>Performance:</strong> Use CSS transforms for positioned badges to avoid layout
                  recalculations
                </li>
                <li>
                  <strong>UX:</strong> Limit badge text to 2-3 words maximum for optimal readability
                </li>
                <li>
                  <strong>Color Usage:</strong> Maintain consistent color meanings across your application
                </li>
                <li>
                  <strong>Sizing:</strong> Ensure badges scale appropriately across different screen
                  sizes
                </li>
                <li>
                  <strong>Animation:</strong> Use subtle transitions when badge content changes dynamically
                </li>
              </ul>
            </div>

            <div class="alert alert-warning">
              <h4 class="alert-heading">
                <i class="ri-error-warning-line me-2"></i>
                Common Pitfalls to Avoid
              </h4>
              <ul class="mb-0">
                <li>Don't use too many badges in a small space - it creates visual clutter</li>
                <li>Avoid badges with lengthy text that might wrap or overflow containers</li>
                <li>
                  Don't rely solely on color to convey meaning - include icons or text when possible
                </li>
                <li>
                  Never use badges for essential information that users must see to complete tasks
                </li>
                <li>Don't forget to handle very large numbers (1000+ should become "1K+")</li>
                <li>
                  Avoid animated badges unless the animation serves a specific functional purpose
                </li>
              </ul>
            </div>

            <div class="alert alert-success">
              <h4 class="alert-heading">
                <i class="ri-code-s-slash-line me-2"></i>
                JavaScript Integration Example
              </h4>
              <p class="mb-2">Here's a reusable badge manager class for dynamic badges:</p>
              <pre><code>{`class BadgeManager {
  constructor() {
    this.counters = new Map();
    this.observers = new Map();
  }

  // Update badge with number formatting
  updateCounter(badgeId, count, options = {}) {
    const badge = document.getElementById(badgeId);
    if (!badge) return;

    const formattedCount = this.formatCount(count, options.maxDisplay);
    badge.textContent = formattedCount;

    // Add/remove visibility based on count
    if (count > 0) {
      badge.classList.remove('d-none');
      badge.setAttribute('aria-label', \`\${count} \${options.label || 'items'}\`);
    } else {
      badge.classList.add('d-none');
    }

    // Store for reference
    this.counters.set(badgeId, count);
  }

  // Format large numbers (1000+ becomes 1K+)
  formatCount(count, maxDisplay = 999) {
    if (count <= maxDisplay) return count.toString();

    if (count < 1000) return \`\${maxDisplay}+\`;
    if (count < 1000000) return \`\${Math.floor(count / 1000)}K+\`;
    return \`\${Math.floor(count / 1000000)}M+\`;
  }

  // Animate badge changes
  animateChange(badgeId, newCount, options = {}) {
    const badge = document.getElementById(badgeId);
    if (!badge) return;

    // Add pulse animation
    badge.classList.add('animate-pulse');

    setTimeout(() => {
      this.updateCounter(badgeId, newCount, options);
      badge.classList.remove('animate-pulse');
    }, 150);
  }

  // Create positioned notification badge
  createNotificationBadge(parentElement, count, position = 'top-right') {
    const badge = document.createElement('span');
    badge.className = \`position-absolute translate-middle badge rounded-pill bg-danger\`;
    badge.textContent = this.formatCount(count);

    // Position classes
    const positions = {
      'top-right': 'top-0 start-100',
      'top-left': 'top-0 start-0',
      'bottom-right': 'top-100 start-100',
      'bottom-left': 'top-100 start-0'
    };

    badge.className += \` \${positions[position] || positions['top-right']}\`;

    // Ensure parent has position relative
    if (!parentElement.classList.contains('position-relative')) {
      parentElement.classList.add('position-relative');
    }

    parentElement.appendChild(badge);
    return badge;
  }
}`}</code></pre>
            </div>
          </div>
        </div>
      </div>
    </div>
    <Toc />
  </div>
</AdminLayout>
