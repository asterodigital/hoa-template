---
import AdminLayout from '../../../layouts/admin/admin-layout.astro'
import ComponentPreview from '../../../components/component-preview/component-preview.astro'
import Toc from '../../../components/toc/toc.astro'
import PageHeader from '../../../components/common/page-header.astro'
import { getPathPrefix } from '../../../../utils/path.js'

// Page header configuration with breadcrumb navigation
const pageHeaderConfiguration = {
  title: 'List Group Components',
  breadcrumbs: [
    { label: 'Docs', href: getPathPrefix('/docs') },
    { label: 'Interface', href: getPathPrefix('/interface') },
    { label: 'List Group', class: 'active' }
  ]
}

// Basic list group example showcasing simple items
const basicListGroupExample = `<ul class="list-group">
  <li class="list-group-item">Project Overview</li>
  <li class="list-group-item">Team Members</li>
  <li class="list-group-item">Project Timeline</li>
  <li class="list-group-item">Resource Allocation</li>
  <li class="list-group-item">Project Deliverables</li>
</ul>`

// Active state example demonstrating selected item
const activeListGroupExample = `<ul class="list-group">
  <li class="list-group-item active" aria-current="true">Current Sprint</li>
  <li class="list-group-item">Backlog Items</li>
  <li class="list-group-item">Completed Tasks</li>
  <li class="list-group-item">Sprint Review</li>
  <li class="list-group-item">Sprint Planning</li>
</ul>`

// Disabled state example showing unavailable items
const disabledListGroupExample = `<ul class="list-group">
  <li class="list-group-item disabled" aria-disabled="true">Archived Projects</li>
  <li class="list-group-item">Active Projects</li>
  <li class="list-group-item">Project Proposals</li>
  <li class="list-group-item">Ongoing Initiatives</li>
  <li class="list-group-item">Future Planning</li>
</ul>`

// Interactive links example with active and disabled states
const interactiveLinksExample = `<div class="list-group">
  <a href="#" class="list-group-item list-group-item-action active" aria-current="true">
    Dashboard Overview
  </a>
  <a href="#" class="list-group-item list-group-item-action">Project Analytics</a>
  <a href="#" class="list-group-item list-group-item-action">Team Performance</a>
  <a href="#" class="list-group-item list-group-item-action">Resource Management</a>
  <a class="list-group-item list-group-item-action disabled" aria-disabled="true">System Maintenance</a>
</div>`

// Interactive buttons example with active and disabled states
const interactiveButtonsExample = `<div class="list-group">
  <button type="button" class="list-group-item list-group-item-action active" aria-current="true">
    Manage Projects
  </button>
  <button type="button" class="list-group-item list-group-item-action">Team Settings</button>
  <button type="button" class="list-group-item list-group-item-action">User Permissions</button>
  <button type="button" class="list-group-item list-group-item-action">System Configuration</button>
  <button type="button" class="list-group-item list-group-item-action" disabled>Advanced Settings</button>
</div>`

// Flush style list group without borders
const flushListGroupExample = `<ul class="list-group list-group-flush">
  <li class="list-group-item">Recent Activities</li>
  <li class="list-group-item">Notifications</li>
  <li class="list-group-item">Messages</li>
  <li class="list-group-item">Task Updates</li>
  <li class="list-group-item">System Alerts</li>
</ul>`

// Simple numbered list example
const numberedListExample = `<ol class="list-group list-group-numbered">
  <li class="list-group-item">Project Requirements</li>
  <li class="list-group-item">Design Phase</li>
  <li class="list-group-item">Development Stage</li>
</ol>`

// Advanced numbered list with custom content
const advancedNumberedListExample = `<ol class="list-group list-group-numbered">
  <li class="list-group-item d-flex justify-content-between align-items-start">
    <div class="ms-2 me-auto">
      <div class="fw-bold">Backend Development</div>
      API implementation and database setup
    </div>
    <span class="badge text-bg-primary rounded-pill">14 Tasks</span>
  </li>
  <li class="list-group-item d-flex justify-content-between align-items-start">
    <div class="ms-2 me-auto">
      <div class="fw-bold">Frontend Development</div>
      UI components and user interactions
    </div>
    <span class="badge text-bg-primary rounded-pill">8 Tasks</span>
  </li>
  <li class="list-group-item d-flex justify-content-between align-items-start">
    <div class="ms-2 me-auto">
      <div class="fw-bold">Quality Assurance</div>
      Testing and bug fixes
    </div>
    <span class="badge text-bg-primary rounded-pill">6 Tasks</span>
  </li>
</ol>`

// Horizontal list group examples with responsive variants
const horizontalListGroupExample = `<ul class="list-group list-group-horizontal mb-3">
  <li class="list-group-item">Dashboard</li>
  <li class="list-group-item">Projects</li>
  <li class="list-group-item">Tasks</li>
</ul>
<ul class="list-group list-group-horizontal-sm mb-3">
  <li class="list-group-item">Analytics</li>
  <li class="list-group-item">Reports</li>
  <li class="list-group-item">Settings</li>
</ul>
<ul class="list-group list-group-horizontal-md mb-3">
  <li class="list-group-item">Users</li>
  <li class="list-group-item">Teams</li>
  <li class="list-group-item">Roles</li>
</ul>`

// Contextual variants example
const contextualVariantsExample = `<ul class="list-group">
  <li class="list-group-item">Default System Status</li>
  <li class="list-group-item list-group-item-primary">Primary Notification</li>
  <li class="list-group-item list-group-item-secondary">Secondary Information</li>
  <li class="list-group-item list-group-item-success">Task Completed Successfully</li>
  <li class="list-group-item list-group-item-danger">Critical System Alert</li>
  <li class="list-group-item list-group-item-warning">Warning Message</li>
  <li class="list-group-item list-group-item-info">Information Update</li>
  <li class="list-group-item list-group-item-light">Low Priority Note</li>
  <li class="list-group-item list-group-item-dark">Important Update</li>
</ul>`

// Interactive variants example
const interactiveVariantsExample = `<div class="list-group">
  <a href="#" class="list-group-item list-group-item-action">View Dashboard</a>
  <a href="#" class="list-group-item list-group-item-action list-group-item-primary">Check Updates</a>
  <a href="#" class="list-group-item list-group-item-action list-group-item-secondary">View Statistics</a>
  <a href="#" class="list-group-item list-group-item-action list-group-item-success">Completed Projects</a>
  <a href="#" class="list-group-item list-group-item-action list-group-item-danger">Critical Tasks</a>
  <a href="#" class="list-group-item list-group-item-action list-group-item-warning">Pending Reviews</a>
  <a href="#" class="list-group-item list-group-item-action list-group-item-info">Recent Activities</a>
  <a href="#" class="list-group-item list-group-item-action list-group-item-light">Archive</a>
  <a href="#" class="list-group-item list-group-item-action list-group-item-dark">System Logs</a>
</div>`

// List group with badges example
const badgedListGroupExample = `<ul class="list-group">
  <li class="list-group-item d-flex justify-content-between align-items-center">
    Active Projects
    <span class="badge text-bg-primary rounded-pill">14</span>
  </li>
  <li class="list-group-item d-flex justify-content-between align-items-center">
    Pending Tasks
    <span class="badge text-bg-primary rounded-pill">28</span>
  </li>
  <li class="list-group-item d-flex justify-content-between align-items-center">
    Completed Milestones
    <span class="badge text-bg-primary rounded-pill">9</span>
  </li>
</ul>`

// Custom content example with rich text
const customContentExample = `<div class="list-group">
  <a href="#" class="list-group-item list-group-item-action active" aria-current="true">
    <div class="d-flex w-100 justify-content-between">
      <h5 class="mb-1">Project Launch Update</h5>
      <small>3 days ago</small>
    </div>
    <p class="mb-1">Successfully deployed new features to production environment.</p>
    <small>Click to view deployment details.</small>
  </a>
  <a href="#" class="list-group-item list-group-item-action">
    <div class="d-flex w-100 justify-content-between">
      <h5 class="mb-1">Team Meeting Summary</h5>
      <small class="text-body-secondary">1 day ago</small>
    </div>
    <p class="mb-1">Discussion about upcoming sprint planning and resource allocation.</p>
    <small class="text-body-secondary">View meeting notes.</small>
  </a>
  <a href="#" class="list-group-item list-group-item-action">
    <div class="d-flex w-100 justify-content-between">
      <h5 class="mb-1">System Maintenance Notice</h5>
      <small class="text-body-secondary">5 hours ago</small>
    </div>
    <p class="mb-1">Scheduled maintenance window for system updates and optimization.</p>
    <small class="text-body-secondary">Check maintenance schedule.</small>
  </a>
</div>`

// Checkbox list group example
const checkboxListGroupExample = `<ul class="list-group">
  <li class="list-group-item">
    <input class="form-check-input me-1" type="checkbox" value="" id="taskCheckbox1">
    <label class="form-check-label" for="taskCheckbox1">Review Project Requirements</label>
  </li>
  <li class="list-group-item">
    <input class="form-check-input me-1" type="checkbox" value="" id="taskCheckbox2">
    <label class="form-check-label" for="taskCheckbox2">Update Documentation</label>
  </li>
  <li class="list-group-item">
    <input class="form-check-input me-1" type="checkbox" value="" id="taskCheckbox3">
    <label class="form-check-label" for="taskCheckbox3">Test New Features</label>
  </li>
</ul>`

// Radio button list group example
const radioListGroupExample = `<ul class="list-group">
  <li class="list-group-item">
    <input class="form-check-input me-1" type="radio" name="projectPriority" value="" id="priorityHigh" checked>
    <label class="form-check-label" for="priorityHigh">High Priority</label>
  </li>
  <li class="list-group-item">
    <input class="form-check-input me-1" type="radio" name="projectPriority" value="" id="priorityMedium">
    <label class="form-check-label" for="priorityMedium">Medium Priority</label>
  </li>
  <li class="list-group-item">
    <input class="form-check-input me-1" type="radio" name="projectPriority" value="" id="priorityLow">
    <label class="form-check-label" for="priorityLow">Low Priority</label>
  </li>
</ul>`

// Stretched link checkbox list group example
const stretchedLinkExample = `<ul class="list-group">
  <li class="list-group-item">
    <input class="form-check-input me-1" type="checkbox" value="" id="taskStretch1">
    <label class="form-check-label stretched-link" for="taskStretch1">Configure Development Environment</label>
  </li>
  <li class="list-group-item">
    <input class="form-check-input me-1" type="checkbox" value="" id="taskStretch2">
    <label class="form-check-label stretched-link" for="taskStretch2">Setup Continuous Integration</label>
  </li>
  <li class="list-group-item">
    <input class="form-check-input me-1" type="checkbox" value="" id="taskStretch3">
    <label class="form-check-label stretched-link" for="taskStretch3">Deploy to Production</label>
  </li>
</ul>`
---

<AdminLayout
  title="List Group Components"
  description="Create flexible and interactive list groups for organizing content and navigation"
  currentPath="docs/interface/list-group"
  enableComponentPreview={true}
>
  <PageHeader {...pageHeaderConfiguration} />
  <div class="row">
    <div class="col-lg-9 col-xl-9 order-1 order-lg-0">
      <div class="row">
        <div class="col-12">
          <p class="my-0">
            List groups are versatile UI components that organize content into clear, manageable
            lists. Perfect for displaying navigation items, task lists, or content groupings, they
            offer various styles and interactive options to enhance user experience and information
            hierarchy.
          </p>
          <div class="alert alert-info mt-3">
            <i class="ri-lightbulb-line me-2"></i>
            <strong>Design Tip:</strong> Enhance usability by using appropriate variants for different
            content types. Consider using badges for counters, custom content for rich information, and
            interactive styles for clickable items.
          </div>
        </div>
      </div>
      <div class="row js-toc-content">
        <div class="col-12">
          <!-- Basic List Group Section -->
          <div class="my-3">
            <h3 class="mb-0" id="basic-example">Basic List Group</h3>
            <p class="py-2">
              Basic list groups provide a clean, structured way to display related items. Each item
              can be customized with various styles and content types while maintaining consistent
              spacing and alignment.
            </p>
            <ComponentPreview
              title="Basic List Group Example"
              height="300px"
              component={basicListGroupExample}
              htmlCode={basicListGroupExample}
            />
          </div>

          <!-- Active Items Section -->
          <div class="my-3">
            <h3 class="mb-0" id="active-items">Active Items</h3>
            <p class="py-2">
              Highlight the current selection or active state using the <code>active</code> class. This
              visual indicator helps users understand their current context within the list.
            </p>
            <ComponentPreview
              title="Active Items Example"
              height="300px"
              component={activeListGroupExample}
              htmlCode={activeListGroupExample}
            />
          </div>

          <!-- Disabled Items Section -->
          <div class="my-3">
            <h3 class="mb-0" id="disabled-items">Disabled Items</h3>
            <p class="py-2">
              Use the <code>disabled</code> class to indicate unavailable or inactive items. This helps
              manage user expectations by clearly showing which options are not currently accessible.
            </p>
            <ComponentPreview
              title="Disabled Items Example"
              height="300px"
              component={disabledListGroupExample}
              htmlCode={disabledListGroupExample}
            />
          </div>

          <!-- Links and Buttons Section -->
          <div class="my-3">
            <h3 class="mb-0" id="links-and-buttons">Interactive Elements</h3>
            <p class="py-2">
              Transform list items into interactive elements using <code
                >list-group-item-action</code
              >. This creates clickable links or buttons with hover states and focus styles.
            </p>
            <ComponentPreview
              title="Interactive Links"
              height="300px"
              component={interactiveLinksExample}
              htmlCode={interactiveLinksExample}
            />

            <p class="py-2">
              Button-style list items provide a more prominent interactive feel, perfect for
              action-oriented lists or menu items.
            </p>
            <ComponentPreview
              title="Interactive Buttons"
              height="300px"
              component={interactiveButtonsExample}
              htmlCode={interactiveButtonsExample}
            />
          </div>

          <!-- Flush Style Section -->
          <div class="my-3">
            <h3 class="mb-0" id="flush">Flush Style</h3>
            <p class="py-2">
              Remove borders and rounded corners with <code>list-group-flush</code> for a cleaner, minimalist
              appearance that integrates seamlessly with container elements.
            </p>
            <ComponentPreview
              title="Flush Style Example"
              height="300px"
              component={flushListGroupExample}
              htmlCode={flushListGroupExample}
            />
          </div>

          <!-- Numbered Lists Section -->
          <div class="my-3">
            <h3 class="mb-0" id="numbered">Numbered Lists</h3>
            <p class="py-2">
              Create ordered lists with automatic numbering using <code>list-group-numbered</code>.
              Perfect for step-by-step instructions or prioritized items.
            </p>
            <ComponentPreview
              title="Simple Numbered List"
              height="200px"
              component={numberedListExample}
              htmlCode={numberedListExample}
            />

            <p class="py-2">
              Enhance numbered lists with custom content and badges for richer information display.
            </p>
            <ComponentPreview
              title="Advanced Numbered List"
              height="250px"
              component={advancedNumberedListExample}
              htmlCode={advancedNumberedListExample}
            />
          </div>

          <!-- Horizontal Layout Section -->
          <div class="my-3">
            <h3 class="mb-0" id="horizontal">Horizontal Layout</h3>
            <p class="py-2">
              Create horizontal list groups using responsive classes like <code
                >list-group-horizontal-(sm|md|lg|xl|xxl)</code
              >. This layout is perfect for navigation bars or status indicators.
            </p>
            <ComponentPreview
              title="Horizontal Layout Examples"
              height="300px"
              component={horizontalListGroupExample}
              htmlCode={horizontalListGroupExample}
            />
          </div>

          <!-- Contextual Variants Section -->
          <div class="my-3">
            <h3 class="mb-0" id="variants">Contextual Variants</h3>
            <p class="py-2">
              Use contextual classes to convey meaning through color. Each variant provides visual
              distinction for different types of content or states.
            </p>
            <ComponentPreview
              title="Contextual Variants"
              height="450px"
              component={contextualVariantsExample}
              htmlCode={contextualVariantsExample}
            />
          </div>

          <!-- Interactive Variants Section -->
          <div class="my-3">
            <h3 class="mb-0" id="for-links-and-buttons">Interactive Variants</h3>
            <p class="py-2">
              Combine action states with contextual variants to create interactive elements that
              maintain their semantic meaning.
            </p>
            <ComponentPreview
              title="Interactive Variants"
              height="450px"
              component={interactiveVariantsExample}
              htmlCode={interactiveVariantsExample}
            />
          </div>

          <!-- Badges Section -->
          <div class="my-3">
            <h3 class="mb-0" id="badges">Badges</h3>
            <p class="py-2">
              Incorporate badges to display counters, status indicators, or other small pieces of
              metadata alongside list items.
            </p>
            <ComponentPreview
              title="List Group with Badges"
              height="200px"
              component={badgedListGroupExample}
              htmlCode={badgedListGroupExample}
            />
          </div>

          <!-- Custom Content Section -->
          <div class="my-3">
            <h3 class="mb-0" id="custom-content">Custom Content</h3>
            <p class="py-2">
              Create rich list items with custom content including headings, paragraphs, and
              metadata. Perfect for news feeds, notification lists, or detailed menu items.
            </p>
            <ComponentPreview
              title="Custom Content Example"
              height="500px"
              component={customContentExample}
              htmlCode={customContentExample}
            />
          </div>

          <!-- Checkboxes and Radios Section -->
          <div class="my-3">
            <h3 class="mb-0" id="checkboxes-and-radios">Selection Controls</h3>
            <p class="py-2">
              Integrate checkboxes and radio buttons for interactive selection functionality. Ideal
              for task lists, settings menus, or multi-select interfaces.
            </p>
            <ComponentPreview
              title="Checkbox List Group"
              height="200px"
              component={checkboxListGroupExample}
              htmlCode={checkboxListGroupExample}
            />

            <ComponentPreview
              title="Radio Button List Group"
              height="200px"
              component={radioListGroupExample}
              htmlCode={radioListGroupExample}
            />

            <p class="py-2">
              Use <code>stretched-link</code> to make the entire list item clickable, improving the interactive
              area for better usability.
            </p>
            <ComponentPreview
              title="Stretched Link Example"
              height="200px"
              component={stretchedLinkExample}
              htmlCode={stretchedLinkExample}
            />
          </div>
        </div>
      </div>
    </div>
    <Toc />
  </div>
</AdminLayout>
