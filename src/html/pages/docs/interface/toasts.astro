---
import AdminLayout from '../../../layouts/admin/admin-layout.astro'
import ComponentPreview from '../../../components/component-preview/component-preview.astro'
import Toc from '../../../components/toc/toc.astro'
import PageHeader from '../../../components/common/page-header.astro'
import { getPathPrefix } from '../../../../utils/path.js'

const pageHeaderProps = {
  title: 'Toasts',
  breadcrumbs: [
    { label: 'Docs', href: getPathPrefix('/docs') },
    { label: 'Interface', href: getPathPrefix('/interface') },
    { label: 'Toasts', class: 'active' }
  ]
}

// JavaScript for handling live toast demonstration
const toastDemoScript = `<script is:inline>
const toastTriggerBtn = document.getElementById('liveToastBtn')
const toastNotification = document.getElementById('liveToast')

if (toastTriggerBtn) {
  const toastInstance = bootstrap.Toast.getOrCreateInstance(toastNotification)
  toastTriggerBtn.addEventListener('click', () => {
    toastInstance.show()
  })
}
</script>
`

// Basic toast example with Remixicon
const basicToastExample = `<div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
  <div class="toast-header">
    <i class="ri-notification-3-line me-2 text-primary" style="font-size: 1.25rem;"></i>
    <strong class="me-auto">System Notification</strong>
    <small>Just now</small>
    <button type="button" class="btn-close text-bg-light" data-bs-dismiss="toast" aria-label="Close"></button>
  </div>
  <div class="toast-body">
    Your profile has been updated successfully!
  </div>
</div>
`

// Live toast demonstration example
const liveToastExample = `<button type="button" class="btn btn-primary" id="liveToastBtn">Show Notification</button>

<div class="toast-container position-fixed bottom-0 end-0 p-3">
  <div id="liveToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <i class="ri-notification-3-line me-2 text-primary" style="font-size: 1.25rem;"></i>
      <strong class="me-auto">System Notification</strong>
      <small>Just now</small>
      <button type="button" class="btn-close text-bg-light" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      New update available! Click here to learn more.
    </div>
  </div>
</div>
`

// Translucent toast example
const translucentToastExample = `<div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
  <div class="toast-header">
    <i class="ri-information-line me-2 text-info" style="font-size: 1.25rem;"></i>
    <strong class="me-auto">Information</strong>
    <small class="text-body-secondary">2 minutes ago</small>
    <button type="button" class="btn-close text-bg-light" data-bs-dismiss="toast" aria-label="Close"></button>
  </div>
  <div class="toast-body">
    Your changes have been automatically saved.
  </div>
</div>
`

// Stacked toasts example
const stackedToastsExample = `<div class="toast-container position-static">
  <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <i class="ri-check-line me-2 text-success" style="font-size: 1.25rem;"></i>
      <strong class="me-auto">Success</strong>
      <small class="text-body-secondary">just now</small>
      <button type="button" class="btn-close text-bg-light" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      File upload completed successfully.
    </div>
  </div>

  <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <i class="ri-error-warning-line me-2 text-warning" style="font-size: 1.25rem;"></i>
      <strong class="me-auto">Warning</strong>
      <small class="text-body-secondary">2 seconds ago</small>
      <button type="button" class="btn-close text-bg-light" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Your storage is almost full. Consider upgrading your plan.
    </div>
  </div>
</div>
`

// Simple toast example
const simpleToastExample = `<div class="toast show align-items-center" role="alert" aria-live="assertive" aria-atomic="true">
  <div class="d-flex">
    <div class="toast-body">
      Settings saved successfully!
    </div>
    <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
  </div>
</div>
`

// Interactive toast example
const interactiveToastExample = `<div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
  <div class="toast-body">
    Would you like to enable desktop notifications?
    <div class="mt-2 pt-2 border-top">
      <button type="button" class="btn btn-primary btn-sm">Enable</button>
      <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="toast">Not now</button>
    </div>
  </div>
</div>
`

// Colored toast example
const coloredToastExample = `<div class="toast show align-items-center text-bg-primary border-0" role="alert" aria-live="assertive" aria-atomic="true">
  <div class="d-flex">
    <div class="toast-body">
      <i class="ri-shield-check-line me-2"></i>
      Your account is now secured with two-factor authentication.
    </div>
    <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
  </div>
</div>
`

// Positioned toasts example
const positionedToastsExample = `<div aria-live="polite" aria-atomic="true" class="position-relative">
  <div class="toast-container top-0 end-0 p-3">
    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <i class="ri-mail-line me-2 text-primary" style="font-size: 1.25rem;"></i>
        <strong class="me-auto">New Message</strong>
        <small class="text-body-secondary">just now</small>
        <button type="button" class="btn-close text-bg-light" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">
        You have 3 unread messages.
      </div>
    </div>

    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <i class="ri-calendar-event-line me-2 text-info" style="font-size: 1.25rem;"></i>
        <strong class="me-auto">Calendar</strong>
        <small class="text-body-secondary">2 seconds ago</small>
        <button type="button" class="btn-close text-bg-light" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">
        Meeting reminder: Team sync in 15 minutes.
      </div>
    </div>
  </div>
</div>`

// Centered toast example
const centeredToastExample = `<!-- Flexbox container for centering the toast -->
<div aria-live="polite" aria-atomic="true" class="d-flex justify-content-center align-items-center w-100">
  <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="toast-header">
      <i class="ri-gift-line me-2 text-success" style="font-size: 1.25rem;"></i>
      <strong class="me-auto">Special Offer</strong>
      <small>5 mins ago</small>
      <button type="button" class="btn-close text-bg-light" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body">
      Limited time offer: Get 20% off on your next purchase!
    </div>
  </div>
</div>
`
---

<AdminLayout
  title="Toasts"
  description="Interactive toast notifications for user feedback"
  currentPath="docs/interface/toasts"
  enableComponentPreview={true}
  pageScript={toastDemoScript}
>
  <PageHeader {...pageHeaderProps} />
  <div class="row">
    <div class="col-lg-9 col-xl-9 order-1 order-lg-0">
      <div class="row">
        <div class="col-12">
          <p class="my-0">
            Toast notifications are lightweight, non-intrusive alerts that provide timely feedback
            to users. They are perfect for displaying success messages, warnings, or important
            updates without disrupting the user experience. Toasts can be customized with different
            styles, positions, and interactive elements to suit your application's needs.
          </p>
        </div>
      </div>
      <div class="row js-toc-content">
        <div class="col-12">
          <div class="my-3">
            <h3 class="mb-0" id="basic-example">Basic Example</h3>
            <p class="py-2">
              A standard toast notification featuring an icon, title, timestamp, and dismissible
              button. This example demonstrates the basic structure and essential elements of a
              toast message.
            </p>

            <ComponentPreview
              title="Basic Toast"
              height="250px"
              component={basicToastExample}
              htmlCode={basicToastExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="live-demo">Live Demonstration</h3>
            <p class="py-2">
              Click the button below to trigger a toast notification. This interactive example shows
              how toasts can be programmatically displayed in response to user actions.
            </p>

            <ComponentPreview
              title="Live Toast Demo"
              height="250px"
              component={liveToastExample}
              htmlCode={liveToastExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="translucent-toast">Translucent Toast</h3>
            <p class="py-2">
              A semi-transparent toast that blends with the background while maintaining
              readability. Perfect for creating a subtle notification that doesn't overwhelm the
              interface.
            </p>

            <ComponentPreview
              title="Translucent Toast"
              height="250px"
              component={translucentToastExample}
              htmlCode={translucentToastExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="stacking-toasts">Stacking Toasts</h3>
            <p class="py-2">
              Multiple toasts can be stacked in a container, automatically arranging themselves
              vertically. This pattern is useful when multiple notifications need to be displayed
              simultaneously.
            </p>

            <ComponentPreview
              title="Stacked Toasts"
              height="300px"
              component={stackedToastsExample}
              htmlCode={stackedToastsExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="custom-toasts">Custom Toasts</h3>
            <p class="py-2">
              Simplified toast variant with minimal styling, perfect for quick status updates or
              simple messages.
            </p>

            <ComponentPreview
              title="Simple Toast"
              height="250px"
              component={simpleToastExample}
              htmlCode={simpleToastExample}
              cssCode={``}
              jsCode={``}
            />

            <p class="py-2">
              Interactive toast with action buttons, ideal for prompting user decisions or
              responses.
            </p>

            <ComponentPreview
              title="Interactive Toast"
              height="250px"
              component={interactiveToastExample}
              htmlCode={interactiveToastExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="color-schemes">Color Schemes</h3>
            <p class="py-2">
              Toasts can be styled with different background colors to indicate various message
              types or importance levels. Use utility classes like <code>text-bg-primary</code>, <code
                >text-bg-success</code
              >, or <code>text-bg-danger</code>
              to create contextual notifications.
            </p>

            <ComponentPreview
              title="Colored Toast"
              height="250px"
              component={coloredToastExample}
              htmlCode={coloredToastExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="placement">Toast Placement</h3>
            <p class="py-2">
              Toasts can be positioned anywhere on the screen using Bootstrap's position utilities.
              Common placements include top-right, bottom-right, or center of the viewport.
            </p>

            <ComponentPreview
              title="Positioned Toasts"
              height="350px"
              component={positionedToastsExample}
              htmlCode={positionedToastsExample}
              cssCode={``}
              jsCode={``}
            />

            <p class="py-2">
              Center-aligned toast using Flexbox utilities, useful for important messages that need
              to capture the user's attention.
            </p>

            <ComponentPreview
              title="Centered Toast"
              height="250px"
              component={centeredToastExample}
              htmlCode={centeredToastExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
        </div>
      </div>
    </div>
    <Toc />
  </div>
</AdminLayout>
