---
import AdminLayout from '../../../layouts/admin/admin-layout.astro'
import ComponentPreview from '../../../components/component-preview/component-preview.astro'
import Toc from '../../../components/toc/toc.astro'
import PageHeader from '../../../components/common/page-header.astro'
import { getPathPrefix } from '../../../../utils/path.js'

// Page header configuration with breadcrumb navigation and icons
const pageHeaderConfig = {
  title: 'Dropdowns',
  breadcrumbs: [
    { label: 'Docs', href: getPathPrefix('/docs'), icon: 'ri-dashboard-line' },
    { label: 'Interface', href: getPathPrefix('/interface'), icon: 'ri-layout-line' },
    { label: 'Dropdowns', class: 'active', icon: 'ri-arrow-down-s-line' } // No href means it's the current page
  ]
}

// Basic dropdown example with default styling
const dropdownBasicExample = `<div class="dropdown">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Dropdown Menu
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
  </ul>
</div>
`
const dropdownSmallButtons = `<div class="btn-group">
  <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-settings-3-line me-1"></i>Small Menu
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-file-list-line me-2"></i>View</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
  </ul>
</div>
<div class="btn-group">
  <button class="btn btn-secondary btn-sm" type="button">
    <i class="ri-menu-2-line me-1"></i>Small Split
  </button>
  <button type="button" class="btn btn-sm btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-file-list-line me-2"></i>View</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
  </ul>
</div>
`
const dropdownItemSizingExample = `<div class="row g-3">
  <div class="col-auto">
    <div class="dropdown">
      <button class="btn btn-xs btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="ri-text-spacing me-1"></i>Extra Small
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item dropdown-item-xs" href="#"><i class="ri-file-list-2-line me-2"></i>View Details</a></li>
        <li><a class="dropdown-item dropdown-item-xs" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
        <li><a class="dropdown-item dropdown-item-xs" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
      </ul>
    </div>
  </div>
  <div class="col-auto">
    <div class="dropdown">
      <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="ri-text-spacing me-1"></i>Small Size
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item dropdown-item-sm" href="#"><i class="ri-file-list-2-line me-2"></i>View Details</a></li>
        <li><a class="dropdown-item dropdown-item-sm" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
        <li><a class="dropdown-item dropdown-item-sm" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
      </ul>
    </div>
  </div>
  <div class="col-auto">
    <div class="dropdown">
      <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="ri-text-spacing me-1"></i>Default Size
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#"><i class="ri-file-list-2-line me-2"></i>View Details</a></li>
        <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
        <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
      </ul>
    </div>
  </div>
  <div class="col-auto">
    <div class="dropdown">
      <button class="btn btn-lg btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="ri-text-spacing me-1"></i>Large Size
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item dropdown-item-lg" href="#"><i class="ri-file-list-2-line me-2"></i>View Details</a></li>
        <li><a class="dropdown-item dropdown-item-lg" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
        <li><a class="dropdown-item dropdown-item-lg" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
      </ul>
    </div>
  </div>
  <div class="col-auto">
    <div class="dropdown">
      <button class="btn btn-xl btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
        <i class="ri-text-spacing me-1"></i>Extra Large
      </button>
      <ul class="dropdown-menu">
        <li><a class="dropdown-item dropdown-item-xl" href="#"><i class="ri-file-list-2-line me-2"></i>View Details</a></li>
        <li><a class="dropdown-item dropdown-item-xl" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
        <li><a class="dropdown-item dropdown-item-xl" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
      </ul>
    </div>
  </div>
</div>
`
const dropdownCenteredExample = `<div class="dropdown-center">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-align-center me-1"></i>Centered Menu
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>
`
const dropupDefault = `<!-- Default dropup button -->
<div class="btn-group dropup" style="margin-top: 105px;">
    <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
        Dropup
    </button>
    <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Action</a></li>
        <li><a class="dropdown-item" href="#">Action two</a></li>
        <li><a class="dropdown-item" href="#">Action three</a></li>
    </ul>
</div>

<!-- Split dropup button -->
<div class="btn-group dropup" style="margin-top: 105px;">
    <button type="button" class="btn btn-secondary">
        Split dropup
    </button>
    <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
        <span class="visually-hidden">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu">
        <li><a class="dropdown-item" href="#">Action</a></li>
        <li><a class="dropdown-item" href="#">Action two</a></li>
        <li><a class="dropdown-item" href="#">Action three</a></li>
    </ul>
</div>
`
const dropupCenteredExample = `<div class="dropup-center dropup" style="margin-top: 105px;">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    Centered Dropup
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>
`
const dropendExample = `<!-- Default dropend button -->
<div class="btn-group dropend">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Right Menu
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-file-list-line me-2"></i>View Details</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
  </ul>
</div>

<!-- Split dropend button -->
<div class="btn-group dropend">
  <button type="button" class="btn btn-secondary">
    <i class="ri-menu-line me-1"></i>Split Right
  </button>
  <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropend</span>
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-file-list-line me-2"></i>View Details</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
  </ul>
</div>
`
const dropstartExample = `<!-- Default dropstart button -->
<div style="margin-left: 160px;">
<div class="btn-group dropstart mb-1">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Left Menu
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-file-list-line me-2"></i>View Details</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
  </ul>
</div>

<!-- Split dropstart button -->
<div class="btn-group dropstart mb-1">
  <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropstart</span>
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-file-list-line me-2"></i>View Details</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit Item</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
  </ul>
  <button type="button" class="btn btn-secondary">
    <i class="ri-menu-line me-1"></i>Split Left
  </button>
</div>
</div>
`
const dropdownRightAlignedExample = `<div class="btn-group">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-align-right me-1"></i>Right-aligned Menu
  </button>
  <ul class="dropdown-menu dropdown-menu-end">
    <li><button class="dropdown-item" type="button"><i class="ri-user-line me-2"></i>Profile</button></li>
    <li><button class="dropdown-item" type="button"><i class="ri-settings-line me-2"></i>Settings</button></li>
    <li><button class="dropdown-item" type="button"><i class="ri-logout-box-line me-2"></i>Logout</button></li>
  </ul>
</div>
`
const dropdownResponsiveRightExample = `<div class="btn-group">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" data-bs-display="static" aria-expanded="false">
    <i class="ri-align-left me-1"></i>Left on Mobile, Right on Desktop
  </button>
  <ul class="dropdown-menu dropdown-menu-lg-end">
    <li><button class="dropdown-item" type="button"><i class="ri-user-line me-2"></i>Profile</button></li>
    <li><button class="dropdown-item" type="button"><i class="ri-settings-line me-2"></i>Settings</button></li>
    <li><button class="dropdown-item" type="button"><i class="ri-logout-box-line me-2"></i>Logout</button></li>
  </ul>
</div>
`
const dropdownResponsiveLeftExample = `<div class="btn-group">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" data-bs-display="static" aria-expanded="false">
    <i class="ri-align-right me-1"></i>Right on Mobile, Left on Desktop
  </button>
  <ul class="dropdown-menu dropdown-menu-end dropdown-menu-lg-start">
    <li><button class="dropdown-item" type="button"><i class="ri-user-line me-2"></i>Profile</button></li>
    <li><button class="dropdown-item" type="button"><i class="ri-settings-line me-2"></i>Settings</button></li>
    <li><button class="dropdown-item" type="button"><i class="ri-logout-box-line me-2"></i>Logout</button></li>
  </ul>
</div>
`
const dropdownAlignmentExamples = `<div class="btn-group pb-1">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    Dropdown
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
  </ul>
</div>

<div class="btn-group pb-1">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Right-aligned menu
  </button>
  <ul class="dropdown-menu dropdown-menu-end">
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
  </ul>
</div>

<div class="btn-group pb-1">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" data-bs-display="static" aria-expanded="false">
    Left-aligned, right-aligned lg
  </button>
  <ul class="dropdown-menu dropdown-menu-lg-end">
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
  </ul>
</div>

<div class="btn-group pb-1">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" data-bs-display="static" aria-expanded="false">
    Right-aligned, left-aligned lg
  </button>
  <ul class="dropdown-menu dropdown-menu-end dropdown-menu-lg-start">
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
  </ul>
</div>

<div class="btn-group dropstart pb-1">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Dropstart
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
  </ul>
</div>

<div class="btn-group dropend pb-1">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Dropend
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
  </ul>
</div>

<div class="btn-group dropup pb-1">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    Dropup
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
    <li><a class="dropdown-item" href="#">Menu item</a></li>
  </ul>
</div>
`
// Dropdown with link example
const dropdownLinkExample = `<div class="dropdown">
  <a class="btn btn-secondary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-link me-1"></i>Dropdown Link
  </a>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-file-list-line me-2"></i>View Details</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-edit-box-line me-2"></i>Edit Item</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Remove</a></li>
  </ul>
</div>
`

// Primary button dropdown with additional options
const dropdownPrimaryExample = `<!-- Example single primary button -->
<div class="btn-group">
  <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-settings-line me-1"></i>Actions
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-eye-line me-2"></i>View</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-share-line me-2"></i>Share</a></li>
    <li><hr class="dropdown-divider"></li>
    <li><a class="dropdown-item" href="#"><i class="ri-delete-bin-line me-2"></i>Delete</a></li>
  </ul>
</div>
`

// Split button dropdown with primary styling
const dropdownSplitButtonExample = `<!-- Example split primary button -->
<div class="btn-group">
  <button type="button" class="btn btn-primary">
    <i class="ri-save-line me-1"></i>Save
  </button>
  <button type="button" class="btn btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-save-line me-2"></i>Save Draft</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-time-line me-2"></i>Schedule</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-share-line me-2"></i>Share</a></li>
    <li><hr class="dropdown-divider"></li>
    <li><a class="dropdown-item" href="#"><i class="ri-close-line me-2"></i>Cancel</a></li>
  </ul>
</div>
`

// Large button dropdowns with enhanced styling
const dropdownLargeButtonsExample = `<!-- Large button groups (default and split) -->
<div class="btn-group pb-1">
  <button class="btn btn-secondary btn-lg dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-settings-4-line me-1"></i>Large Menu
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>
<div class="btn-group pb-1">
  <button class="btn btn-secondary btn-lg" type="button">
    <i class="ri-menu-line me-1"></i>Large Split
  </button>
  <button type="button" class="btn btn-lg btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
    <span class="visually-hidden">Toggle Dropdown</span>
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>
`

// Button-style dropdown items with icons
const dropdownButtonItemsExample = `<div class="dropdown">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-list-settings-line me-1"></i>Menu Options
  </button>
  <ul class="dropdown-menu">
    <li><button class="dropdown-item" type="button"><i class="ri-save-line me-2"></i>Save Changes</button></li>
    <li><button class="dropdown-item" type="button"><i class="ri-refresh-line me-2"></i>Refresh Data</button></li>
    <li><button class="dropdown-item" type="button"><i class="ri-close-circle-line me-2"></i>Cancel Action</button></li>
  </ul>
</div>
`

// Non-interactive dropdown items with icons
const dropdownNonInteractiveItemsExample = `<div class="dropdown">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Mixed Content
  </button>
  <ul class="dropdown-menu">
    <li><span class="dropdown-item-text"><i class="ri-information-line me-2"></i>System Status: Online</span></li>
    <li><a class="dropdown-item" href="#"><i class="ri-dashboard-line me-2"></i>View Dashboard</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>System Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>
`

// Active state dropdown items with icons
const dropdownActiveItemsExample = `<div class="dropdown">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Active Items
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-home-line me-2"></i>Home</a></li>
    <li><a class="dropdown-item active" href="#" aria-current="true"><i class="ri-dashboard-line me-2"></i>Dashboard</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
  </ul>
</div>
`

// Disabled state dropdown items with icons
const dropdownDisabledItemsExample = `<div class="dropdown">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Mixed States
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-edit-line me-2"></i>Edit Profile</a></li>
    <li><a class="dropdown-item disabled" aria-disabled="true"><i class="ri-lock-line me-2"></i>Admin Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-user-settings-line me-2"></i>User Settings</a></li>
  </ul>
</div>
`

// Header example with icons
const dropdownWithHeaderExample = `<div class="btn-group">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>User Menu
  </button>
  <ul class="dropdown-menu">
    <li><h6 class="dropdown-header"><i class="ri-user-line me-2"></i>User Settings</h6></li>
    <li><a class="dropdown-item" href="#"><i class="ri-profile-line me-2"></i>Edit Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Preferences</a></li>
    <li><h6 class="dropdown-header mt-3"><i class="ri-shield-line me-2"></i>Security</h6></li>
    <li><a class="dropdown-item" href="#"><i class="ri-lock-password-line me-2"></i>Change Password</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-shield-keyhole-line me-2"></i>2FA Settings</a></li>
  </ul>
</div>
`

// Divider example with icons
const dropdownWithDividerExample = `<div class="btn-group">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Account Menu
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><hr class="dropdown-divider"></li>
    <li><a class="dropdown-item text-danger" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>
`

// Text content example with icons
const dropdownWithTextExample = `<div class="btn-group">
  <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
    <i class="ri-information-line me-1"></i>System Info
  </button>
  <div class="dropdown-menu p-4 text-body-secondary" style="width: 300px;">
    <div class="mb-2">
      <i class="ri-computer-line me-2"></i><strong>System Status:</strong>
    </div>
    <p class="mb-2">
      All systems are operating normally. Server load is at 42%, with 2.3GB of memory available.
    </p>
    <div class="mb-2">
      <i class="ri-time-line me-2"></i><strong>Last Updated:</strong>
    </div>
    <p class="mb-0">
      2 minutes ago
    </p>
  </div>
</div>`

// Dropdown with offset and reference examples
const dropdownWithOptionsExample = `<div class="d-flex">
  <div class="dropdown me-1">
    <button type="button" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false" data-bs-offset="10,20">
      <i class="ri-arrow-right-down-line me-1"></i>Offset Menu
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
      <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
      <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
    </ul>
  </div>
  <div class="btn-group">
    <button type="button" class="btn btn-secondary">
      <i class="ri-menu-line me-1"></i>Reference Parent
    </button>
    <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false" data-bs-reference="parent">
      <span class="visually-hidden">Toggle Dropdown</span>
    </button>
    <ul class="dropdown-menu">
      <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
      <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
      <li><hr class="dropdown-divider"></li>
      <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
    </ul>
  </div>
</div>
`

// Auto-close behavior examples
const dropdownAutoCloseExample = `<div class="btn-group pb-1">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Default Behavior
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>

<div class="btn-group pb-1">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="inside" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Close on Inside Click
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>

<div class="btn-group pb-1">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="outside" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Close on Outside Click
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>

<div class="btn-group pb-1">
  <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" data-bs-auto-close="false" aria-expanded="false">
    <i class="ri-menu-line me-1"></i>Manual Close Only
  </button>
  <ul class="dropdown-menu">
    <li><a class="dropdown-item" href="#"><i class="ri-user-line me-2"></i>Profile</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-settings-line me-2"></i>Settings</a></li>
    <li><a class="dropdown-item" href="#"><i class="ri-logout-box-line me-2"></i>Logout</a></li>
  </ul>
</div>
`
---

<AdminLayout
  title="Dropdowns"
  description="Interactive dropdown menus and components with various styles and behaviors"
  currentPath="docs/interface/dropdowns"
  enableComponentPreview={true}
>
  <PageHeader {...pageHeaderConfig} />
  <div class="row">
    <div class="col-lg-9 col-xl-9 order-1 order-lg-0">
      <div class="row">
        <div class="col-12">
          <p class="my-0">
            Dropdowns are versatile UI components that reveal contextual menus or options when
            triggered. They help organize content hierarchically and conserve screen space by
            showing additional options only when needed. Our dropdowns support various styles,
            sizes, and behaviors to match your application's needs.
          </p>
        </div>
      </div>
      <div class="row js-toc-content">
        <div class="col-12">
          <div class="my-3">
            <h3 class="mb-0" id="examples">Examples</h3>
            <p class="py-2">
              Create dropdowns by wrapping the trigger element (button or link) and dropdown menu in
              a <code>.dropdown</code> container. The menu can be toggled through clicking or hovering,
              depending on your configuration. Each example below demonstrates different dropdown variations
              and their use cases.
            </p>
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="single-button">Single Button Dropdown</h3>
            <p class="py-2">
              The basic dropdown consists of a button with <code>dropdown-toggle</code> class that triggers
              a menu with <code>dropdown-menu</code> class. Each menu item is styled with <code
                >dropdown-item</code
              >
              class for consistent appearance and behavior. Icons can be added to both the button and
              menu items for better visual hierarchy.
            </p>

            <!-- Basic Dropdown Example -->
            <ComponentPreview
              title="Single Button Dropdown"
              height="250px"
              component={dropdownBasicExample}
              htmlCode={dropdownBasicExample}
              cssCode={``}
              jsCode={``}
            />

            <p class="py-2">
              For navigation purposes, you can use an <code>&lt;a&gt;</code> tag instead of a button.
              This is particularly useful when the dropdown trigger should also act as a link.
            </p>

            <!-- Link Dropdown Example -->
            <ComponentPreview
              title="Link Dropdown"
              height="250px"
              component={dropdownLinkExample}
              htmlCode={dropdownLinkExample}
              cssCode={``}
              jsCode={``}
            />

            <p class="py-2">
              Dropdowns can be styled with any of Bootstrap's button variants to match your design
              system:
            </p>

            <!-- Primary Dropdown Example -->
            <ComponentPreview
              title="Primary Dropdown"
              height="250px"
              component={dropdownPrimaryExample}
              htmlCode={dropdownPrimaryExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="split-button">Split Button Dropdowns</h3>
            <p class="py-2">
              Split button dropdowns combine a primary action button with a dropdown toggle. The
              first button performs an immediate action, while the dropdown toggle (marked by a
              caret) reveals related options. This pattern is ideal for providing quick access to a
              primary action while keeping related options easily accessible.
            </p>

            <!-- Split Button Example -->
            <ComponentPreview
              title="Split Button Dropdown"
              height="250px"
              component={dropdownSplitButtonExample}
              htmlCode={dropdownSplitButtonExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="sizing">Dropdown Sizing</h3>
            <p class="py-2">
              Dropdowns can be sized to match your interface needs using Bootstrap's sizing classes.
              Use <code>btn-lg</code> for larger dropdowns in prominent areas, and <code
                >btn-sm</code
              >
              for more compact dropdowns in dense interfaces. The sizing applies to both the trigger
              button and split button variations.
            </p>

            <!-- Large Buttons Example -->
            <ComponentPreview
              title="Large Dropdowns"
              height="300px"
              component={dropdownLargeButtonsExample}
              htmlCode={dropdownLargeButtonsExample}
              cssCode={``}
              jsCode={``}
            />

            <!-- Small Buttons Example -->
            <ComponentPreview
              title="Small Dropdowns"
              height="250px"
              component={dropdownSmallButtons}
              htmlCode={dropdownSmallButtons}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="dropdown-item-sizes">Dropdown Menu Item Sizes</h3>
            <p class="py-2">
              Fine-tune the appearance of dropdown menu items using our custom sizing classes. The
              classes <code>dropdown-item-xs</code>, <code>dropdown-item-sm</code>,
              <code>dropdown-item</code> (default), <code>dropdown-item-lg</code>, and
              <code>dropdown-item-xl</code> allow you to create a consistent hierarchy in your dropdown
              menus. Each size variant maintains proper spacing for icons and text.
            </p>

            <!-- Dropdown Item Sizes Example -->
            <ComponentPreview
              title="Menu Item Sizes"
              height="300px"
              component={dropdownItemSizingExample}
              htmlCode={dropdownItemSizingExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="directions">Menu Directions</h3>
            <p class="py-2">
              Dropdown menus can be positioned in different directions to better suit your layout
              needs. The direction classes control where the menu appears relative to the trigger
              button. In Right-to-Left (RTL) mode, these directions are automatically flipped to
              maintain proper alignment.
            </p>
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="centered">Centered Dropdowns</h3>
            <p class="py-2">
              Use the <code>dropdown-center</code> class to horizontally center the dropdown menu relative
              to its trigger element. This is particularly useful for centered navigation items or when
              you want to ensure the dropdown aligns with centered content.
            </p>

            <!-- Centered Dropdown Example -->
            <ComponentPreview
              title="Centered Dropdown"
              height="250px"
              component={dropdownCenteredExample}
              htmlCode={dropdownCenteredExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="dropup">Dropup</h3>
            <p class="py-2">
              When space below the button is limited, use the <code>dropup</code> class to make the dropdown
              menu appear above the trigger button. This is particularly useful in fixed footers or when
              the dropdown is near the bottom of the viewport.
            </p>

            <!-- Dropup Example -->
            <ComponentPreview
              title="Dropup Menu"
              height="250px"
              component={dropupDefault}
              htmlCode={dropupDefault}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="dropup-centered">Centered Dropup</h3>
            <p class="py-2">
              Combine <code>dropup-center</code> with <code>dropup</code> classes to create a centered
              menu that appears above the trigger button. This ensures both vertical and horizontal alignment
              for a perfectly centered dropdown experience.
            </p>

            <!-- Centered Dropup Example -->
            <ComponentPreview
              title="Centered Dropup"
              height="250px"
              component={dropupCenteredExample}
              htmlCode={dropupCenteredExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="dropend">Right-aligned Dropdown (Dropend)</h3>
            <p class="py-2">
              The <code>dropend</code> class positions the dropdown menu to the right of the trigger
              button. This is useful for nested navigation menus or when you want to conserve vertical
              space. Both standard and split button variations are supported with this direction.
            </p>

            <!-- Dropend Example -->
            <ComponentPreview
              title="Right-aligned Dropdown"
              height="250px"
              component={dropendExample}
              htmlCode={dropendExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="dropstart">Left-aligned Dropdown (Dropstart)</h3>
            <p class="py-2">
              Use the <code>dropstart</code> class to position the dropdown menu to the left of the trigger
              button. This direction is particularly useful for right-aligned navigation items or when
              you want the menu to open towards the start of the reading direction. Both standard and
              split button variations maintain proper alignment in this configuration.
            </p>

            <!-- Dropstart Example -->
            <ComponentPreview
              title="Left-aligned Dropdown"
              height="250px"
              component={dropstartExample}
              htmlCode={dropstartExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="menu-items">Menu Items</h3>
            <p class="py-2">
              Dropdown menu items can be implemented in various ways to suit different interaction
              needs. You can use <code>&lt;button&gt;</code> elements for action triggers, <code
                >&lt;a&gt;</code
              >
              tags for navigation, or static text elements for informational content. Each type maintains
              consistent styling through the <code>dropdown-item</code> class.
            </p>

            <!-- Button Items Example -->
            <ComponentPreview
              title="Button Menu Items"
              height="250px"
              component={dropdownButtonItemsExample}
              htmlCode={dropdownButtonItemsExample}
              cssCode={``}
              jsCode={``}
            />

            <p class="py-2">
              Use <code>dropdown-item-text</code> class to create non-interactive text elements within
              the dropdown menu. This is useful for displaying static information or status messages
              alongside actionable items.
            </p>

            <!-- Non-interactive Items Example -->
            <ComponentPreview
              title="Mixed Content Items"
              height="250px"
              component={dropdownNonInteractiveItemsExample}
              htmlCode={dropdownNonInteractiveItemsExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="active">Active State</h3>
            <p class="py-2">
              Add the <code>active</code> class and <code>aria-current="true"</code> to highlight the
              current selection or active state in your dropdown menu. This provides visual feedback
              and improves accessibility by indicating the current context to users.
            </p>

            <!-- Active Items Example -->
            <ComponentPreview
              title="Active Menu Items"
              height="250px"
              component={dropdownActiveItemsExample}
              htmlCode={dropdownActiveItemsExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="disabled">Disabled State</h3>
            <p class="py-2">
              Use the <code>disabled</code> class and <code>aria-disabled="true"</code> attribute to
              indicate unavailable options in your dropdown menu. This provides both visual and accessibility
              cues that certain actions are currently not available.
            </p>

            <!-- Disabled Items Example -->
            <ComponentPreview
              title="Disabled Menu Items"
              height="250px"
              component={dropdownDisabledItemsExample}
              htmlCode={dropdownDisabledItemsExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="menu-alignment">Menu Alignment</h3>
            <p class="py-2">
              By default, dropdown menus are left-aligned relative to their parent element. Use the <code
                >dropdown-menu-end</code
              > class to right-align the menu, which is particularly useful for right-aligned navigation
              items or when you need to prevent the menu from extending beyond the viewport's right edge.
            </p>

            <!-- Right-aligned Menu Example -->
            <ComponentPreview
              title="Right-aligned Menu"
              height="250px"
              component={dropdownRightAlignedExample}
              htmlCode={dropdownRightAlignedExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="responsive-alignment">Responsive Alignment</h3>
            <p class="py-2">
              Create responsive dropdown menus that change alignment based on screen size. Use
              classes like <code>dropdown-menu-lg-end</code> to switch from left alignment on mobile
              to right alignment on larger screens, or <code
                >dropdown-menu-end dropdown-menu-lg-start</code
              >
              for the opposite behavior.
            </p>

            <!-- Responsive Right Alignment Example -->
            <ComponentPreview
              title="Left to Right Responsive Alignment"
              height="250px"
              component={dropdownResponsiveRightExample}
              htmlCode={dropdownResponsiveRightExample}
              cssCode={``}
              jsCode={``}
            />

            <p class="py-2">
              For the opposite behavior, combine <code>dropdown-menu-end</code> with
              <code>dropdown-menu-lg-start</code> to switch from right alignment on mobile to left alignment
              on desktop screens.
            </p>

            <!-- Responsive Left Alignment Example -->
            <ComponentPreview
              title="Right to Left Responsive Alignment"
              height="250px"
              component={dropdownResponsiveLeftExample}
              htmlCode={dropdownResponsiveLeftExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="alignment-options">Alignment options</h3>
            <p class="py-2">Here are various dropdown alignment options you can use.</p>

            <!-- Dropdowns Example -->
            <ComponentPreview
              title="Alignment Options"
              height="300px"
              component={dropdownAlignmentExamples}
              htmlCode={dropdownAlignmentExamples}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="menu-content">Menu Content</h3>
            <p class="py-2">
              Dropdown menus can contain various types of content beyond simple links or buttons.
              You can include headers, dividers, and rich text content to create more structured and
              informative dropdown menus.
            </p>
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="headers">Headers</h3>
            <p class="py-2">
              Add section headers to your dropdown menu using the <code>dropdown-header</code> class.
              Headers help organize menu items into logical groups and improve navigation clarity. You
              can combine headers with icons and other content to create rich, structured menus.
            </p>

            <!-- Header Example -->
            <ComponentPreview
              title="Menu with Headers"
              height="350px"
              component={dropdownWithHeaderExample}
              htmlCode={dropdownWithHeaderExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="dividers">Dividers</h3>
            <p class="py-2">
              Use the <code>dropdown-divider</code> class to add horizontal separators between groups
              of related menu items. Dividers help create visual hierarchy and improve menu readability
              by clearly separating different types of actions or content sections.
            </p>

            <!-- Divider Example -->
            <ComponentPreview
              title="Menu with Divider"
              height="250px"
              component={dropdownWithDividerExample}
              htmlCode={dropdownWithDividerExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="text">Text Content</h3>
            <p class="py-2">
              Enhance your dropdowns with rich text content using the <code>p-4</code> utility class
              for padding and <code>text-body-secondary</code> for proper text styling. This is useful
              for displaying detailed information, status messages, or any content that requires more
              formatting than standard menu items.
            </p>

            <!-- Text Content Example -->
            <ComponentPreview
              title="Menu with Text Content"
              height="350px"
              component={dropdownWithTextExample}
              htmlCode={dropdownWithTextExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="dropdown-options">Dropdown Options</h3>
            <p class="py-2">
              Customize dropdown behavior and positioning using various data attributes. These
              options give you fine-grained control over how dropdowns interact with users and how
              they're positioned relative to their trigger elements.
            </p>
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="offset-and-reference">Offset and Reference</h3>
            <p class="py-2">
              Use <code>data-bs-offset</code> to adjust the dropdown's position with pixel offsets. The
              format is "x,y" where x controls horizontal and y controls vertical offset. The <code
                >data-bs-reference</code
              > attribute determines which element the dropdown is positioned relative to, useful for
              split buttons and complex layouts.
            </p>

            <!-- Offset and Reference Example -->
            <ComponentPreview
              title="Offset and Reference Options"
              height="250px"
              component={dropdownWithOptionsExample}
              htmlCode={dropdownWithOptionsExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="auto-close-behavior">Auto-close Behavior</h3>
            <p class="py-2">
              Control how dropdowns close using the <code>data-bs-auto-close</code> attribute:
              <ul>
                <li><code>true</code> (default) - closes on any click</li>
                <li><code>inside</code> - closes only when clicking inside the dropdown</li>
                <li><code>outside</code> - closes only when clicking outside the dropdown</li>
                <li><code>false</code> - disables automatic closing</li>
              </ul>
              This gives you precise control over the dropdown's interaction behavior.
            </p>

            <!-- Auto-close Example -->
            <ComponentPreview
              title="Auto-close Options"
              height="300px"
              component={dropdownAutoCloseExample}
              htmlCode={dropdownAutoCloseExample}
              cssCode={``}
              jsCode={``}
            />
          </div>
        </div>
      </div>
    </div>
    <Toc />
  </div>
</AdminLayout>
