---
import AdminLayout from '../../../layouts/admin/admin-layout.astro'
import ComponentPreview from '../../../components/component-preview/component-preview.astro'
import Toc from '../../../components/toc/toc.astro'
import PageHeader from '../../../components/common/page-header.astro'
import { getPathPrefix } from '../../../../utils/path.js'

// Page header configuration with navigation breadcrumbs
const pageHeaderConfig = {
  title: 'Typography',
  breadcrumbs: [
    { label: 'Docs', href: getPathPrefix('/docs') },
    { label: 'Interface', href: getPathPrefix('/interface') },
    { label: 'Typography', class: 'active' }
  ]
}

// Typography examples
const headings = `<h1>h1 heading</h1>
<h2>h2 heading</h2>
<h3>h3 heading</h3>
<h4>h4 heading</h4>
<h5>h5 heading</h5>
<h6>h6 heading</h6>
`

const uppercaseHeadings = `<h1 class="text-uppercase">h1 heading</h1>
<h2 class="text-uppercase">h2 heading</h2>
<h3 class="text-uppercase">h3 heading</h3>
<h4 class="text-uppercase">h4 heading</h4>
<h5 class="text-uppercase">h5 heading</h5>
<h6 class="text-uppercase">h6 heading</h6>
`

const smallHeadings = `<h1 class="text-uppercase fs-6">small heading</h1>
`

const displayHeadings = `<h1 class="display-1">display 1</h1>
<h1 class="display-2">display 2</h1>
<h1 class="display-3">display 3</h1>
<h1 class="display-4">display 4</h1>
<h1 class="display-5">display 5</h1>
<h1 class="display-6">display 6</h1>
`

const leadText = `<p class="lead">This is an example of lead text, which is typically used to highlight important information or introduce a section.</p>
`

const unorderedList = `<ul class="unordered-list primary">
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
</ul>
`

const iconList = `<ul class="icon-list success">
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
</ul>
`

const dropcap = `<p class="dropcap primary">Lorem ipsum dolor sit amet, consect adipis elit. Sed euismod nisl eget ultrics tincid nunc nisl aliqua nisl eget aliqua nisl nisl eget nisl.consect adipis elit. Sed euismod nisl eget ultrics tincid nunc nisl aliqua nisl eget aliqua nisl nisl eget nisl.consect adipis elit. Sed euismod nisl eget ultrics tincid nunc nisl aliqua nisl eget aliqua nisl nisl eget nisl.</p>
`

const linkOpacity = `<p><a class="link-opacity-10" href="#">Link opacity 10</a></p>
<p><a class="link-opacity-25" href="#">Link opacity 25</a></p>
<p><a class="link-opacity-50" href="#">Link opacity 50</a></p>
<p><a class="link-opacity-75" href="#">Link opacity 75</a></p>
<p><a class="link-opacity-100" href="#">Link opacity 100</a></p>
`

const linkHoverOpacity = `<p><a class="link-opacity-10-hover" href="#">Link hover opacity 10</a></p>
<p><a class="link-opacity-25-hover" href="#">Link hover opacity 25</a></p>
<p><a class="link-opacity-50-hover" href="#">Link hover opacity 50</a></p>
<p><a class="link-opacity-75-hover" href="#">Link hover opacity 75</a></p>
<p><a class="link-opacity-100-hover" href="#">Link hover opacity 100</a></p>
`

const linkUnderlineColor = `<p><a href="#" class="link-underline-primary">Primary underline</a></p>
<p><a href="#" class="link-underline-secondary">Secondary underline</a></p>
<p><a href="#" class="link-underline-success">Success underline</a></p>
<p><a href="#" class="link-underline-danger">Danger underline</a></p>
<p><a href="#" class="link-underline-warning">Warning underline</a></p>
`

const linkUnderlineOpacity = `<p><a class="link-underline link-underline-opacity-0" href="#">Underline opacity 0</a></p>
<p><a class="link-underline link-underline-opacity-10" href="#">Underline opacity 10</a></p>
<p><a class="link-underline link-underline-opacity-25" href="#">Underline opacity 25</a></p>
<p><a class="link-underline link-underline-opacity-50" href="#">Underline opacity 50</a></p>
<p><a class="link-underline link-underline-opacity-75" href="#">Underline opacity 75</a></p>
<p><a class="link-underline link-underline-opacity-100" href="#">Underline opacity 100</a></p>
`

const linkColor = `<p><a href="#" class="link-primary link-underline-opacity-25 link-underline-opacity-100-hover">Primary link</a></p>
<p><a href="#" class="link-secondary link-underline-opacity-25 link-underline-opacity-100-hover">Secondary link</a></p>
<p><a href="#" class="link-success link-underline-opacity-25 link-underline-opacity-100-hover">Success link</a></p>
<p><a href="#" class="link-danger link-underline-opacity-25 link-underline-opacity-100-hover">Danger link</a></p>
<p><a href="#" class="link-warning link-underline-opacity-25 link-underline-opacity-100-hover">Warning link</a></p>
`

// Shared preview configuration for consistent component display
const previewConfig = {
  cssCode: '',
  jsCode: ''
}
---

<AdminLayout
  title="Typography"
  description="Typography components for custom styling"
  currentPath="docs/interface/typography"
  enableComponentPreview={true}
>
  <PageHeader {...pageHeaderConfig} />
  <div class="row">
    <div class="col-lg-9 col-xl-9 order-1 order-lg-0">
      <div class="row">
        <div class="col-12">
          <p class="my-0">
            Typography components are flexible UI elements designed to customize and enhance the
            text style, size, and appearance within an interface.
          </p>
        </div>
      </div>
      <div class="row js-toc-content">
        <div class="col-12">
          <div class="my-3">
            <h3 id="headings">Headings</h3>
            <p class="text-muted mb-3">
              Standard HTML headings from h1 to h6. Use these to create a clear hierarchy of
              content. h1 is the largest and most important, while h6 is the smallest. Each heading
              has default Bootstrap styling with appropriate font sizes and spacing.
            </p>

            <ComponentPreview
              title="Headings"
              height="300px"
              component={headings}
              htmlCode={headings}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="uppercase-headings">Uppercase Headings</h3>
            <p class="text-muted mb-3">
              Transform any heading to uppercase using the <code>.text-uppercase</code> utility class.
              This is useful for creating emphasis or matching specific design requirements while maintaining
              semantic heading structure.
            </p>

            <ComponentPreview
              title="Uppercase Headings"
              height="300px"
              component={uppercaseHeadings}
              htmlCode={uppercaseHeadings}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="small-headings">Small Headings</h3>
            <p class="text-muted mb-3">
              Create smaller headings by combining <code>.text-uppercase</code> with font size utilities
              like <code>.fs-6</code>. Perfect for section labels, captions, or when you need a
              heading that doesn't dominate the visual hierarchy.
            </p>

            <ComponentPreview
              title="Small Headings"
              height="100px"
              component={smallHeadings}
              htmlCode={smallHeadings}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="display-headings">Display Headings</h3>
            <p class="text-muted mb-3">
              Display headings are larger, more prominent headings designed for hero sections,
              landing pages, or when you need maximum visual impact. Use classes <code
                >.display-1</code
              >
              through <code>.display-6</code>, where display-1 is the largest.
            </p>

            <ComponentPreview
              title="Display Headings"
              height="500px"
              component={displayHeadings}
              htmlCode={displayHeadings}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="lead-text">Lead Text</h3>
            <p class="text-muted mb-3">
              Lead text makes a paragraph stand out by increasing its font size and weight. Use the <code
                >.lead</code
              > class for introductory paragraphs, article summaries, or any text that should draw the
              reader's attention.
            </p>

            <ComponentPreview
              title="Lead Text"
              height="200px"
              component={leadText}
              htmlCode={leadText}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="lists">Lists</h3>
            <p class="text-muted mb-3">
              Styled lists with custom bullet points and colors. The <code>.unordered-list</code>
              class with color variants (primary, secondary, etc.) creates colored bullet points. The
              <code>.icon-list</code> class replaces bullets with checkmark icons, perfect for feature
              lists or completed tasks.
            </p>

            <ComponentPreview
              title="Unordered List"
              height="150px"
              component={unorderedList}
              htmlCode={unorderedList}
              {...previewConfig}
            />

            <ComponentPreview
              title="Icon List"
              height="150px"
              component={iconList}
              htmlCode={iconList}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="dropcap">Dropcap</h3>
            <p class="text-muted mb-3">
              A dropcap is a large initial letter that drops below the first line of a paragraph.
              Use the <code>.dropcap</code> class with color variants to create an elegant, magazine-style
              opening for articles or important content sections.
            </p>

            <ComponentPreview
              title="Dropcap"
              height="200px"
              component={dropcap}
              htmlCode={dropcap}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="links">Links</h3>
            <p class="text-muted mb-3">
              Control link opacity for subtle text effects. Use <code>.link-opacity-*</code> classes
              for static opacity (10, 25, 50, 75, 100) or <code>.link-opacity-*-hover</code> classes
              for opacity changes on hover. Great for creating secondary navigation or subtle call-to-action
              links.
            </p>

            <ComponentPreview
              title="Link Opacity"
              height="250px"
              component={linkOpacity}
              htmlCode={linkOpacity}
              {...previewConfig}
            />

            <ComponentPreview
              title="Link Hover Opacity"
              height="250px"
              component={linkHoverOpacity}
              htmlCode={linkHoverOpacity}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="link-underlines">Link Underlines</h3>
            <p class="text-muted mb-3">
              Customize link underlines with color and opacity. Use <code>.link-underline-*</code>
              classes to match underline colors with your theme colors. Combine with
              <code>.link-underline-opacity-*</code> classes to control underline visibility. Perfect
              for creating sophisticated link styling that matches your design system.
            </p>

            <ComponentPreview
              title="Link Underline Color"
              height="250px"
              component={linkUnderlineColor}
              htmlCode={linkUnderlineColor}
              {...previewConfig}
            />

            <ComponentPreview
              title="Link Underline Opacity"
              height="300px"
              component={linkUnderlineOpacity}
              htmlCode={linkUnderlineOpacity}
              {...previewConfig}
            />
          </div>
          <div class="my-3">
            <h3 id="link-color">Link Color</h3>
            <p class="text-muted mb-3">
              Apply theme colors to links using <code>.link-*</code> classes (primary, secondary, success,
              danger, warning). These examples combine colored links with subtle underlines that become
              more prominent on hover, creating an elegant interactive effect.
            </p>

            <ComponentPreview
              title="Link Color"
              height="250px"
              component={linkColor}
              htmlCode={linkColor}
              {...previewConfig}
            />
          </div>
        </div>
      </div>
    </div>
    <Toc />
  </div>
</AdminLayout>
