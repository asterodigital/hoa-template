---
import AdminLayout from '../../../layouts/admin/admin-layout.astro'
import ComponentPreview from '../../../components/component-preview/component-preview.astro'
import Toc from '../../../components/toc/toc.astro'
import PageHeader from '../../../components/common/page-header.astro'
import { getPathPrefix } from '../../../../utils/path.js'

const pageHeaderProps = {
  title: 'Scrollspy',
  breadcrumbs: [
    { label: 'Docs', href: getPathPrefix('/docs') },
    { label: 'Interface', href: getPathPrefix('/interface') },
    { label: 'Scrollspy', class: 'active' }
  ]
}

// Add CSS for scrollspy examples
const scrollspyStyles = `/* Scrollspy styles */
.scrollspy-example,
.scrollspy-example-2 {
  position: relative;
  height: 350px;
  overflow-y: auto;
  padding: 1rem;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 0.25rem;
}

/* Add some spacing between sections */
.scrollspy-example > h4,
.scrollspy-example-2 > div > h4,
.scrollspy-example-2 > div > h5 {
  margin-top: 1.5rem;
}

.scrollspy-example > h4:first-child,
.scrollspy-example-2 > div:first-child > h4 {
  margin-top: 0;
}

/* Style for active navigation items */
.nav-link.active,
.list-group-item.active,
#simple-list-example a.active {
  font-weight: 500;
  background-color: var(--bs-primary);
  color: white;
}

#simple-list-example a {
  text-decoration: none;
  color: var(--bs-body-color);
  transition: all 0.2s ease;
}

#simple-list-example a:hover {
  background-color: var(--bs-light);
}

/* Responsive styles for mobile */
@media (max-width: 767.98px) {
  .scrollspy-nav-container {
    margin-bottom: 1rem;
  }

  .scrollspy-example,
  .scrollspy-example-2 {
    height: 250px;
  }

  /* Make the simple-list-example horizontal on mobile */
  #simple-list-example {
    flex-direction: row !important;
    flex-wrap: wrap;
    justify-content: center;
  }

  #simple-list-example a {
    margin: 0.25rem;
  }
}
`

// Basic navbar scrollspy example with dropdown
const navbarScrollspyExample = `<nav id="navbar-example2" class="navbar bg-body-tertiary px-3 mb-3">
  <a class="navbar-brand" href="#">
    <i class="ri-navigation-fill me-2"></i>Navigation
  </a>
  <div>
    <ul class="nav nav-pills">
      <li class="nav-item">
        <a class="nav-link" href="#scrollspyHeading1">
          <i class="ri-file-list-line me-1"></i>First
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#scrollspyHeading2">
          <i class="ri-file-list-2-line me-1"></i>Second
        </a>
      </li>
      <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false">
          <i class="ri-list-check me-1"></i>More Sections
        </a>
        <ul class="dropdown-menu">
          <li><a class="dropdown-item" href="#scrollspyHeading3"><i class="ri-arrow-right-s-line me-1"></i>Third</a></li>
          <li><a class="dropdown-item" href="#scrollspyHeading4"><i class="ri-arrow-right-s-line me-1"></i>Fourth</a></li>
          <li><hr class="dropdown-divider"></li>
          <li><a class="dropdown-item" href="#scrollspyHeading5"><i class="ri-arrow-right-s-line me-1"></i>Fifth</a></li>
        </ul>
      </li>
    </ul>
  </div>
</nav>
<div data-bs-spy="scroll" data-bs-target="#navbar-example2" data-bs-root-margin="0px 0px -40%" data-bs-smooth-scroll="true" class="scrollspy-example bg-body-tertiary p-3 rounded-2" tabindex="0">
  <h4 id="scrollspyHeading1"><i class="ri-bookmark-line me-2"></i>First heading</h4>
  <p>This is the first section of our scrollspy navigation example. It demonstrates basic content structure and navigation.</p>
  <p>Scrollspy automatically updates navigation based on scroll position to indicate which link is currently active in the viewport. This provides users with a clear visual indication of their current location within the content.</p>

  <h4 id="scrollspyHeading2"><i class="ri-bookmark-2-line me-2"></i>Second heading</h4>
  <p>The second section shows how scrollspy automatically updates the active state of navigation items as you scroll.</p>
  <p>As users scroll through the content, the navigation highlights change smoothly, providing contextual awareness. This is particularly useful for long-form content or documentation pages where maintaining context is important.</p>

  <h4 id="scrollspyHeading3"><i class="ri-bookmark-3-line me-2"></i>Third heading</h4>
  <p>This third section is part of the dropdown menu, showing how scrollspy works with nested navigation structures.</p>
  <p>Dropdown menus in scrollspy navigation allow for organizing multiple sections under a single parent category, creating a hierarchical navigation structure that can accommodate complex content organization needs.</p>

  <h4 id="scrollspyHeading4"><i class="ri-booklet-line me-2"></i>Fourth heading</h4>
  <p>The fourth section continues to demonstrate the smooth scrolling and navigation highlighting features.</p>
  <p>Smooth scrolling enhances the user experience by creating fluid transitions between sections rather than abrupt jumps. This creates a more polished and professional feel to the navigation experience.</p>

  <h4 id="scrollspyHeading5"><i class="ri-book-read-line me-2"></i>Fifth heading</h4>
  <p>This final section completes our scrollspy example, showing how all elements work together cohesively.</p>
  <p>When implemented correctly, scrollspy creates an intuitive and responsive navigation system that enhances content discoverability and improves overall user experience on content-heavy pages.</p>
</div>`

// Nested navigation scrollspy example
const nestedNavScrollspyExample = `<div class="row">
  <div class="col-md-4 col-12 scrollspy-nav-container">
    <nav id="navbar-example3" class="h-100 flex-column align-items-stretch pe-md-4 border-md-end">
      <nav class="nav nav-pills flex-column">
        <a class="nav-link" href="#item-1">
          <i class="ri-folder-line me-2"></i>Main Section 1
        </a>
        <nav class="nav nav-pills flex-column">
          <a class="nav-link ms-3 my-1" href="#item-1-1">
            <i class="ri-file-line me-2"></i>Subsection 1.1
          </a>
          <a class="nav-link ms-3 my-1" href="#item-1-2">
            <i class="ri-file-line me-2"></i>Subsection 1.2
          </a>
        </nav>
        <a class="nav-link" href="#item-2">
          <i class="ri-folder-2-line me-2"></i>Main Section 2
        </a>
        <a class="nav-link" href="#item-3">
          <i class="ri-folder-3-line me-2"></i>Main Section 3
        </a>
        <nav class="nav nav-pills flex-column">
          <a class="nav-link ms-3 my-1" href="#item-3-1">
            <i class="ri-file-line me-2"></i>Subsection 3.1
          </a>
          <a class="nav-link ms-3 my-1" href="#item-3-2">
            <i class="ri-file-line me-2"></i>Subsection 3.2
          </a>
        </nav>
      </nav>
    </nav>
  </div>

  <div class="col-md-8 col-12">
    <div data-bs-spy="scroll" data-bs-target="#navbar-example3" data-bs-smooth-scroll="true" class="scrollspy-example-2" tabindex="0">
      <div id="item-1">
        <h4><i class="ri-folder-open-line me-2"></i>Main Section 1</h4>
        <p>This main section introduces the concept of nested navigation with scrollspy functionality.</p>
        <p>Nested navigation provides a hierarchical structure that helps organize complex content into logical groups and subgroups, making it easier for users to understand the relationship between different sections.</p>
      </div>
      <div id="item-1-1">
        <h5><i class="ri-file-text-line me-2"></i>Subsection 1.1</h5>
        <p>A detailed subsection showing how nested navigation items can be organized and tracked.</p>
        <p>Each subsection maintains its relationship to the parent section while providing more specific navigation options. This creates a clear path for users to follow as they explore detailed content.</p>
      </div>
      <div id="item-1-2">
        <h5><i class="ri-file-text-line me-2"></i>Subsection 1.2</h5>
        <p>Another subsection demonstrating the hierarchical structure of our navigation system.</p>
        <p>Multiple subsections under the same parent create a comprehensive navigation structure that can accommodate complex information architecture while maintaining clarity and usability.</p>
      </div>
      <div id="item-2">
        <h4><i class="ri-folder-open-line me-2"></i>Main Section 2</h4>
        <p>The second main section shows how standalone navigation items work within the nested structure.</p>
        <p>Not all main sections need subsections. This flexibility allows for a mixed navigation structure that can adapt to different content organization needs while maintaining a consistent user experience.</p>
      </div>
      <div id="item-3">
        <h4><i class="ri-folder-open-line me-2"></i>Main Section 3</h4>
        <p>Our third main section introduces another group of nested navigation items.</p>
        <p>Multiple parent sections with their own subsections create a comprehensive navigation system that can scale to accommodate extensive content while keeping everything organized and accessible.</p>
      </div>
      <div id="item-3-1">
        <h5><i class="ri-file-text-line me-2"></i>Subsection 3.1</h5>
        <p>This subsection shows how deeply nested items maintain their navigation hierarchy.</p>
        <p>Visual indentation and styling help users understand the relationship between this subsection and its parent, creating a clear visual hierarchy that reinforces the content structure.</p>
      </div>
      <div id="item-3-2">
        <h5><i class="ri-file-text-line me-2"></i>Subsection 3.2</h5>
        <p>The final subsection completes our nested navigation demonstration.</p>
        <p>As users scroll through this final subsection, they can see how the navigation system maintains context and highlights the current position within the overall content structure.</p>
      </div>
    </div>
  </div>
</div>`

// List group scrollspy example
const listGroupScrollspyExample = `<div class="row">
  <div class="col-md-4 col-12 scrollspy-nav-container">
    <div id="list-example" class="list-group">
      <a class="list-group-item list-group-item-action" href="#list-item-1">
        <i class="ri-checkbox-blank-circle-line me-2"></i>Overview
      </a>
      <a class="list-group-item list-group-item-action" href="#list-item-2">
        <i class="ri-checkbox-blank-circle-line me-2"></i>Features
      </a>
      <a class="list-group-item list-group-item-action" href="#list-item-3">
        <i class="ri-checkbox-blank-circle-line me-2"></i>Benefits
      </a>
      <a class="list-group-item list-group-item-action" href="#list-item-4">
        <i class="ri-checkbox-blank-circle-line me-2"></i>Summary
      </a>
    </div>
  </div>
  <div class="col-md-8 col-12">
    <div data-bs-spy="scroll" data-bs-target="#list-example" data-bs-smooth-scroll="true" class="scrollspy-example" tabindex="0">
      <h4 id="list-item-1"><i class="ri-eye-line me-2"></i>Overview</h4>
      <p>An introduction to the list group scrollspy functionality and its implementation.</p>
      <p>List groups provide a visually distinct navigation option that works well for sequential content. The bordered container creates clear separation between navigation items while maintaining a cohesive look.</p>
      <p>This pattern is particularly effective for step-by-step guides, tutorials, or any content with a clear linear progression.</p>

      <h4 id="list-item-2"><i class="ri-function-line me-2"></i>Features</h4>
      <p>Exploring the key features and capabilities of the list group navigation system.</p>
      <p>List group items provide excellent touch targets for mobile users, with clear active states that make the current position obvious at a glance.</p>
      <p>The consistent styling creates a polished, professional appearance that integrates well with Bootstrap's design language.</p>

      <h4 id="list-item-3"><i class="ri-gift-line me-2"></i>Benefits</h4>
      <p>Understanding the advantages of using list groups for navigation in your interface.</p>
      <p>List groups offer excellent accessibility, with clear focus states and semantic HTML structure that works well with screen readers and keyboard navigation.</p>
      <p>The visual design creates a strong separation between navigation and content, helping users understand the interface structure.</p>

      <h4 id="list-item-4"><i class="ri-article-line me-2"></i>Summary</h4>
      <p>A comprehensive wrap-up of the list group scrollspy implementation and its uses.</p>
      <p>List group scrollspy navigation combines the visual clarity of list groups with the dynamic highlighting of scrollspy to create an intuitive navigation experience.</p>
      <p>This pattern is versatile enough to work in various contexts while providing consistent behavior that users can quickly understand and navigate.</p>
    </div>
  </div>
</div>`

// Simple anchors scrollspy example
const simpleAnchorsScrollspyExample = `<div class="row">
  <div class="col-md-4 col-12 scrollspy-nav-container">
    <div id="simple-list-example" class="d-flex flex-column gap-2 simple-list-example-scrollspy text-center">
      <a class="p-1 rounded" href="#simple-list-item-1">
        <i class="ri-arrow-right-circle-line me-1"></i>Getting Started
      </a>
      <a class="p-1 rounded" href="#simple-list-item-2">
        <i class="ri-arrow-right-circle-line me-1"></i>Configuration
      </a>
      <a class="p-1 rounded" href="#simple-list-item-3">
        <i class="ri-arrow-right-circle-line me-1"></i>Implementation
      </a>
      <a class="p-1 rounded" href="#simple-list-item-4">
        <i class="ri-arrow-right-circle-line me-1"></i>Customization
      </a>
      <a class="p-1 rounded" href="#simple-list-item-5">
        <i class="ri-arrow-right-circle-line me-1"></i>Best Practices
      </a>
    </div>
  </div>
  <div class="col-md-8 col-12">
    <div data-bs-spy="scroll" data-bs-target="#simple-list-example" data-bs-offset="0" data-bs-smooth-scroll="true" class="scrollspy-example" tabindex="0">
      <h4 id="simple-list-item-1"><i class="ri-rocket-line me-2"></i>Getting Started</h4>
      <p>Begin your journey with our simple and intuitive scrollspy navigation system.</p>
      <p>Simple anchor links provide a lightweight navigation option that's easy to implement and customize. This approach uses minimal markup while still delivering effective scrollspy functionality.</p>
      <p>The minimalist design focuses attention on the content while providing just enough visual feedback to guide users through the navigation process.</p>

      <h4 id="simple-list-item-2"><i class="ri-settings-line me-2"></i>Configuration</h4>
      <p>Learn how to configure and customize the scrollspy behavior to match your needs.</p>
      <p>Simple anchors can be easily styled to match any design system, with options for icons, colors, and hover effects that create a cohesive look and feel.</p>
      <p>The flexible structure allows for horizontal or vertical layouts, making it adaptable to different screen sizes and content types.</p>

      <h4 id="simple-list-item-3"><i class="ri-code-line me-2"></i>Implementation</h4>
      <p>Step-by-step guide to implementing scrollspy in your web applications.</p>
      <p>Implementation requires minimal JavaScript setup, with most functionality handled by Bootstrap's built-in scrollspy component. This makes it accessible even to developers with limited JavaScript experience.</p>
      <p>The data attributes provide a declarative way to configure behavior without writing custom code, streamlining the development process.</p>

      <h4 id="simple-list-item-4"><i class="ri-palette-line me-2"></i>Customization</h4>
      <p>Discover ways to style and adapt the scrollspy component to your design system.</p>
      <p>Simple anchors can be customized with CSS variables to match your brand colors and typography, creating a seamless integration with your overall design language.</p>
      <p>The minimal markup makes it easy to add animations, transitions, and other visual enhancements that elevate the user experience.</p>

      <h4 id="simple-list-item-5"><i class="ri-lightbulb-line me-2"></i>Best Practices</h4>
      <p>Essential tips and recommendations for optimal scrollspy implementation.</p>
      <p>For best results, ensure adequate spacing between sections to create clear visual breaks in the content. This helps users understand the content structure and improves the scrollspy highlighting accuracy.</p>
      <p>Consider using descriptive, concise navigation labels that clearly communicate the content of each section, helping users quickly find the information they need.</p>
    </div>
  </div>
</div>`
---

<AdminLayout
  title="Scrollspy"
  description="Automatic navigation highlighting based on scroll position"
  currentPath="docs/interface/scrollspy"
  enableComponentPreview={true}
>
  <PageHeader {...pageHeaderProps} />
  <div class="row">
    <div class="col-lg-9 col-xl-9 order-1 order-lg-0">
      <div class="row">
        <div class="col-12">
          <p class="my-0">
            Scrollspy is an intelligent navigation enhancement that automatically updates navigation
            or list group components based on scroll position. It provides visual feedback about the
            current viewport section, improving user orientation and content navigation experience.
          </p>
        </div>
      </div>
      <div class="row js-toc-content">
        <div class="col-12">
          <div class="my-3">
            <h3 class="mb-0" id="examples">Examples</h3>
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="navbar">Navbar</h3>
            <p class="py-2">
              The navbar scrollspy implementation creates an interactive navigation experience using
              Bootstrap's <code>data-bs-spy="scroll"</code> feature. The navigation automatically highlights
              the current section as users scroll, with smooth transitions and precise targeting through
              <code>data-bs-root-margin</code>. This example includes a dropdown menu for additional
              navigation options.
            </p>

            <ComponentPreview
              title="Navbar Scrollspy"
              height="500px"
              component={navbarScrollspyExample}
              htmlCode={navbarScrollspyExample}
              cssCode={scrollspyStyles}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="nested-nav">Nested Navigation</h3>
            <p class="py-2">
              Nested navigation demonstrates a hierarchical menu structure with primary and
              secondary navigation levels. The <code>nav-pills</code> layout creates a clear visual hierarchy,
              while the <code>flex-column</code> arrangement ensures proper vertical alignment. This
              pattern is particularly useful for documentation sites or complex content structures.
            </p>

            <ComponentPreview
              title="Nested Navigation Scrollspy"
              height="500px"
              component={nestedNavScrollspyExample}
              htmlCode={nestedNavScrollspyExample}
              cssCode={scrollspyStyles}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="list-group">List Group</h3>
            <p class="py-2">
              The list group variant offers a clean, structured navigation approach using
              Bootstrap's <code>list-group</code> component. Each <code>list-group-item-action</code
              > provides clear interactive states and smooth scrolling to corresponding content sections,
              ideal for single-page navigation.
            </p>

            <ComponentPreview
              title="List Group Scrollspy"
              height="500px"
              component={listGroupScrollspyExample}
              htmlCode={listGroupScrollspyExample}
              cssCode={scrollspyStyles}
              jsCode={``}
            />
          </div>
          <div class="my-3">
            <h3 class="mb-0" id="simple-anchors">Simple Anchors</h3>
            <p class="py-2">
              Simple anchors provide a minimalist approach to scrollspy navigation using basic <code
                >a</code
              > elements in a flex container. The <code>gap-2</code> utility ensures consistent spacing,
              while <code>data-bs-smooth-scroll="true"</code> enables smooth scrolling behavior. This
              pattern is perfect for straightforward, linear content navigation.
            </p>

            <ComponentPreview
              title="Simple Anchors Scrollspy"
              height="500px"
              component={simpleAnchorsScrollspyExample}
              htmlCode={simpleAnchorsScrollspyExample}
              cssCode={scrollspyStyles}
              jsCode={``}
            />
          </div>
        </div>
      </div>
    </div>
    <Toc />
  </div>
</AdminLayout>
